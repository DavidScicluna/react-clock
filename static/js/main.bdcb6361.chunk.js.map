{"version":3,"sources":["components/Timer/components/Time/Time.module.scss","components/Tabs/Tabs.js","components/Clock/components/Content/Content.js","components/Clock/components/Paper/Paper.js","components/Clock/components/Dialog/layouts/Add/Add.js","components/Clock/components/Dialog/layouts/List/List.js","components/Clock/components/Dialog/layouts/Delete/Delete.js","components/Clock/components/Dialog/Dialog.js","components/Clock/Clock.js","components/Alarm/components/List/List.js","components/Alarm/components/Paper/Paper.js","components/Alarm/components/Dialog/layouts/Add/Add.js","components/Alarm/components/Dialog/layouts/Delete/Delete.js","components/Alarm/components/Dialog/layouts/Alarm/Alarm.js","components/Alarm/components/Dialog/Dialog.js","components/Alarm/Alarm.js","components/Stopwatch/Stopwatch.js","components/Timer/components/Time/Time.js","components/Timer/components/ButtonGroup/ButtonGroup.js","components/Timer/components/Dialog/Dialog.js","components/Timer/Timer.js","container/App.js","index.js","components/Alarm/components/Dialog/layouts/Add/Add.module.scss","components/Stopwatch/Stopwatch.module.scss","components/Timer/components/ButtonGroup/ButtonGroup.module.scss","components/Alarm/components/Paper/Paper.module.scss","components/Alarm/components/List/List.module.scss","components/Timer/components/Dialog/Dialog.module.scss","components/Clock/components/Content/Content.module.scss","components/Clock/components/Paper/Paper.module.scss","sound/beep.wav","components/Clock/components/Dialog/layouts/List/List.module.scss","components/Alarm/components/Dialog/layouts/Alarm/Alarm.module.scss","components/Clock/components/Dialog/layouts/Delete/Delete.module.scss","components/Clock/Clock.module.scss","components/Alarm/components/Dialog/layouts/Delete/Delete.module.scss","components/Clock/components/Dialog/layouts/Add/Add.module.scss","components/Alarm/Alarm.module.scss","components/Timer/Timer.module.scss","container/App.module.scss"],"names":["module","exports","TabsComponent","location","Paper","elevation","variant","Tabs","value","indicatorColor","textColor","centered","Tab","exact","to","label","component","Link","Content","locationPicked","local","undefined","calcTime","timezone","type","time","Date","setSeconds","locationDate","dateObject","hours","getUTCHours","minutes","getUTCMinutes","day","getDay","dayText","date","getDate","month","getMonth","monthText","year","getFullYear","timeOfDay","className","Style","Typography","Subtitle","align","name","sys","country","Title","color","PaperComponent","handleDialogOpen","Zoom","timeout","in","Tooltip","title","aria-label","placement","Button","onClick","BlackBtn","size","RedBtn","disabled","Add","selectedLocation","selectedLocationError","handleDialogClose","handleKeyPress","onChange","handleSubmit","Fragment","DialogContent","TextField","error","placeholder","fullWidth","onKeyPress","DialogActions","disableSpacing","GreyBtn","ListComponent","locations","handleOpenLocationData","handleClearLocations","hour","minute","List","map","ListItem","key","Math","random","button","ListItemText","primary","secondary","length","Delete","handleDelete","DialogContentText","id","DialogComponent","dialog","dialogType","Dialog","open","keepMounted","onClose","aria-labelledby","maxWidth","DialogTitle","Clock","props","createLocal","removeZero","toString","split","splice","filter","num","parseInt","join","checkTime","currentMinute","state","interval","setInterval","getMinutes","setState","handleLocationChange","event","target","handleFocus","fetch","then","response","json","data","newLocation","handleUpdate","catch","Error","newLocations","currentCities","cities","cod","find","number","toLowerCase","push","localStorage","setItem","JSON","stringify","removeItem","componentDidMount","itemId","itemName","newlocations","item","newCities","clearInterval","this","setLocations","parse","getItem","setCities","Fade","Container","Toolbar","React","Component","alarms","edit","handleAlarmEdit","handleAlarmDelete","handleSwitchChange","Center","alarm","divider","children","active","Active","Inactive","String","ListItemSecondaryAction","edge","IconButton","Switch","checked","handleEdit","handleClearAlarms","PrimaryBtn","Visible","Hidden","alarmPicked","keyPressed","handleTime","onChangeTextfield","handleSave","handleSaveEdit","Time","TimeGroup","Box","mt","m","Alarm","handleStop","ListBtn","checkAlarmComplete","getHours","forEach","playSound","audio","play","volume","loop","handleChangeTextfield","newAlarmLabel","handleAlarmsClear","newAlarms","updateAlarm","handleKeypressDown","preventDefault","handleKeypressUp","clockType","currentKeyPressed","newAlarmHours","newAlarmMinutes","newAlarm","pause","document","removeEventListener","Audio","Sound","setAlarms","addEventListener","Stopwatch","handleLap","newLaps","laps","newLap","index","seconds","unshift","calculateQuickest","currentLap","lastLap","currentQuickestSeconds","quickest","currentSlowestSeconds","slowest","currentPreviousLapSeconds","calculateCurrentLap","quickestSeconds","handleUpdateStopwatch","lap","stopwatchOn","handleReset","handleStart","ButtonGroup","GreenBtn","Normal","Fastest","Slowest","timerOn","handleCancel","Left","Right","handleCloseDialog","handleRepeat","Timer","timer","newTimer","handleFinished","currentTimer","theme","createMuiTheme","palette","main","ReactDOM","render","CssBaseline","ThemeProvider","basename","path","getElementById"],"mappings":"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","file":"static/js/main.bdcb6361.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Time\":\"Time_Time__9K5NM\",\"TimeGroup\":\"Time_TimeGroup__38_XT\",\"Tooltip\":\"Time_Tooltip__3bxoS\",\"Hidden\":\"Time_Hidden__1G8XQ\",\"GreyBtn\":\"Time_GreyBtn__bi49t\"};","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n// Material UI Components\r\nimport { Paper, Tabs, Tab, } from '@material-ui/core';\r\n\r\n// Components\r\n\r\n// Style sheet\r\n\r\nexport function TabsComponent({location}){\r\n    return(\r\n      <Paper elevation={3} variant=\"outlined\">\r\n        <Tabs\r\n          value={location}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          centered\r\n        >\r\n          <Tab exact=\"true\" to=\"/\" label=\"Clock\" component={Link} />\r\n          <Tab to=\"/alarm\" label=\"Alarm\" component={Link} />\r\n          <Tab to=\"/stopwatch\" label=\"Stopwatch\" component={Link} />\r\n          <Tab to=\"/timer\" label=\"Timer\" component={Link} />\r\n        </Tabs>\r\n      </Paper>\r\n    );\r\n}","import React from 'react';\r\n\r\n// Material UI Components\r\nimport { Typography } from '@material-ui/core';\r\n\r\n// Style sheet\r\nimport Style from './Content.module.scss';\r\n\r\nexport function Content({ locationPicked, local}){\r\n    const location = (locationPicked === undefined || locationPicked === null) ? local : locationPicked;\r\n\r\n    // Function to calculate the local time of the location\r\n    function calcTime(timezone, type){\r\n        const date = new Date();\r\n        const time = date.setSeconds(timezone)\r\n        const locationDate = new Date(time);\r\n\r\n        const dateObject = {\r\n            hours: locationDate.getUTCHours(),\r\n            minutes: locationDate.getUTCMinutes(),\r\n            day: locationDate.getDay(),\r\n            dayText: \"\",\r\n            date: locationDate.getDate(),\r\n            month: locationDate.getMonth(),\r\n            monthText: \"\",\r\n            year: locationDate.getFullYear(),\r\n            timeOfDay: \"\",\r\n        }\r\n\r\n        switch(dateObject.day){\r\n            case 0:\r\n                dateObject.dayText = \"Sunday\";\r\n                break;\r\n            case 1:\r\n                dateObject.dayText = \"Monday\";\r\n                break;\r\n            case 2:\r\n                dateObject.dayText = \"Tuesday\";\r\n                break;\r\n            case 3:\r\n                dateObject.dayText = \"Wednesday\";\r\n                break;\r\n            case 4:\r\n                dateObject.dayText = \"Thursday\";\r\n                break;\r\n            case 5:\r\n                dateObject.dayText = \"Friday\";\r\n                break;\r\n            case 6:\r\n                dateObject.dayText = \"Saturday\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        \r\n        switch(dateObject.month){\r\n            case 0:\r\n                dateObject.monthText = \"January\";\r\n                break;\r\n            case 1:\r\n                dateObject.monthText = \"February\";\r\n                break;\r\n            case 2:\r\n                dateObject.monthText = \"March\";\r\n                break;\r\n            case 3:\r\n                dateObject.monthText = \"April\";\r\n                break;\r\n            case 4:\r\n                dateObject.monthText = \"May\";\r\n                break;\r\n            case 5:\r\n                dateObject.monthText = \"June\";\r\n                break;\r\n            case 6:\r\n                dateObject.monthText = \"July\";\r\n                break;\r\n            case 7:\r\n                dateObject.monthText = \"August\";\r\n                break;\r\n            case 8:\r\n                dateObject.monthText = \"September\";\r\n                break;\r\n            case 9:\r\n                dateObject.monthText = \"October\";\r\n                break;\r\n            case 10:\r\n                dateObject.monthText = \"November\";\r\n                break;\r\n            case 11:\r\n                dateObject.monthText = \"December\";\r\n                break;\r\n            default:\r\n                break;\r\n        } \r\n\r\n        \r\n        if(dateObject.minutes >= 0 && dateObject.minutes < 10){\r\n            dateObject.minutes = `0${dateObject.minutes}`\r\n        }\r\n\r\n        if(dateObject.hours >= 0 && dateObject.hours < 12){\r\n            dateObject.timeOfDay = \"AM\";\r\n        } else{\r\n\r\n            switch(dateObject.hours){\r\n                case 13:\r\n                    dateObject.hours = 1;\r\n                    break;\r\n                case 14:\r\n                    dateObject.hours= 2;\r\n                    break;\r\n                case 15:\r\n                    dateObject.hours= 3;\r\n                    break;\r\n                case 16:\r\n                    dateObject.hours= 4;\r\n                    break;\r\n                case 17:\r\n                    dateObject.hours= 5;\r\n                    break;\r\n                case 18:\r\n                    dateObject.hours= 6;\r\n                    break;\r\n                case 19:\r\n                    dateObject.hours= 7;\r\n                    break;\r\n                case 20:\r\n                    dateObject.hours= 8;\r\n                    break;\r\n                case 21:\r\n                    dateObject.hours= 9;\r\n                    break;\r\n                case 22:\r\n                    dateObject.hours= 10;\r\n                    break;\r\n                case 23:\r\n                    dateObject.hours= 11;\r\n                    break;\r\n                default:\r\n                    break;\r\n            } \r\n\r\n            dateObject.timeOfDay = \"PM\";\r\n        }\r\n\r\n        if(dateObject.hours >= 0 && dateObject.hours < 10){\r\n            dateObject.hours = `0${dateObject.hours}`\r\n        }\r\n        \r\n        if(type === \"time\"){\r\n            return `${dateObject.hours}:${dateObject.minutes}`\r\n        }else if(type === \"timeOfDay\"){\r\n            return dateObject.timeOfDay\r\n        } else if(type === \"date\"){\r\n            return `${dateObject.dayText}, ${dateObject.monthText} ${dateObject.date}, ${dateObject.year}`\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className={Style.Content}>\r\n            <Typography className={Style.Subtitle} variant=\"button\" align=\"center\">{location.name === \"Local\" ? location.name : `${location.name} (${location.sys.country})`}</Typography>\r\n            <Typography className={Style.Title} variant=\"h1\" color=\"primary\" align=\"center\">\r\n                {calcTime(location.timezone, \"time\")}\r\n                <span><Typography variant=\"button\" color=\"primary\" align=\"center\">{calcTime(location.timezone, \"timeOfDay\")}</Typography></span>\r\n            </Typography>\r\n            <Typography className={Style.Subtitle} variant=\"button\" align=\"center\">{calcTime(location.timezone, \"date\")}</Typography>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\n// Material UI Components\r\nimport { Zoom, Paper, Tooltip, Button } from '@material-ui/core';\r\n\r\n// Style sheet\r\nimport Style from './Paper.module.scss';\r\n\r\n// Icons\r\nimport ViewListIcon from '@material-ui/icons/ViewList';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nexport function PaperComponent({ locationPicked, handleDialogOpen}){\r\n    const location = (locationPicked === null) ? {name: \"Local\"} : locationPicked;\r\n\r\n    return(\r\n        <Zoom timeout={500} in>\r\n            <Paper className={Style.Paper} variant=\"outlined\" >\r\n                <Tooltip title=\"View Locations\" aria-label=\"View Locations\" placement=\"top\">\r\n                    <Button aria-label=\"View Locations\" onClick={() => handleDialogOpen(\"Loc\")} className={Style.BlackBtn} size=\"large\"><ViewListIcon /></Button>\r\n                </Tooltip> \r\n                <div>\r\n                    <Tooltip title={location.name === \"Local\" ? \"\" : \"Delete Location\"} aria-label=\"Delete Locations\" placement=\"top\">\r\n                        <span>\r\n                            <Button \r\n                                aria-label=\"Delete Locations\"\r\n                                className={location.name === \"Local\" ? \"\" : Style.RedBtn}\r\n                                onClick={() => handleDialogOpen(\"Del\")} \r\n                                size=\"large\" \r\n                                disabled={location.name === \"Local\" ? true : false}><DeleteForeverIcon /></Button>\r\n                        </span>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"Add Location\" aria-label=\"Add Location\" placement=\"top\">\r\n                        <Button aria-label=\"Add Location\" onClick={() => handleDialogOpen(\"Add\")} className={Style.BlackBtn} size=\"large\"><AddIcon /></Button>\r\n                    </Tooltip>\r\n                </div>\r\n            </Paper>\r\n        </Zoom>\r\n    );\r\n}","import React from 'react';\r\n\r\n// Material UI Components\r\nimport {DialogContent, TextField, DialogActions, Button } from '@material-ui/core';\r\n\r\n// Style sheet\r\nimport Style from './Add.module.scss';\r\n\r\nexport function Add({selectedLocation, selectedLocationError, handleDialogClose, handleKeyPress, onChange, handleSubmit}){\r\n    return(\r\n        <React.Fragment>\r\n            <DialogContent>\r\n                <TextField\r\n                    error={selectedLocationError}\r\n                    label=\"City\"\r\n                    placeholder='Try \"London\"'\r\n                    type=\"string\"\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    value={selectedLocation}\r\n                    onChange={onChange}\r\n                    onKeyPress={handleKeyPress}\r\n                />\r\n            </DialogContent>\r\n            <DialogActions disableSpacing>\r\n                <Button className={Style.GreyBtn} onClick={handleDialogClose}>Cancel</Button>\r\n                <Button onClick={handleSubmit} color=\"primary\">Submit</Button>\r\n            </DialogActions>\r\n        </React.Fragment>\r\n    );\r\n}","import React from 'react';\r\n\r\n// Material UI Components\r\nimport {List, ListItem, ListItemText, DialogActions, Button} from '@material-ui/core';\r\n\r\n// Style sheet\r\nimport Style from './List.module.scss';\r\n\r\nexport function ListComponent({locations, handleOpenLocationData, handleDialogClose, handleClearLocations }){\r\n\r\n    // Function to calculate the local time of the location\r\n    function calcTime(timezone){\r\n        const date = new Date();\r\n        const time = date.setSeconds(timezone)\r\n        const locationDate = new Date(time);\r\n\r\n        const dateObject = {\r\n            hour: locationDate.getUTCHours(),\r\n            minute: locationDate.getUTCMinutes(),\r\n        } \r\n\r\n        if(dateObject.minute >= 0 && dateObject.minute < 10){\r\n            dateObject.minute = `0${dateObject.minute}`\r\n        }\r\n\r\n        if(dateObject.hour >= 0 && dateObject.hour < 10){\r\n            dateObject.hour = `0${dateObject.hour}`\r\n        }\r\n        \r\n        return `${dateObject.hour}:${dateObject.minute}`\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <List className={Style.List}>\r\n                {\r\n                    locations.map(location => {\r\n                        return(\r\n                            <ListItem key={Math.random()} button onClick={() => handleOpenLocationData(location)}>\r\n                                <ListItemText align=\"left\" primary={location.name === \"Local\" ? location.name : `${location.name} (${location.sys.country})`} />\r\n                                <ListItemText align=\"right\" secondary={calcTime(location.timezone)} />\r\n                            </ListItem>\r\n                        );\r\n                    })        \r\n                }\r\n            </List>\r\n            <DialogActions disableSpacing>\r\n                <Button className={Style.GreyBtn} onClick={handleDialogClose}>Cancel</Button>\r\n                <Button className={locations.length === 1 ? \"\" : Style.RedBtn} onClick={handleClearLocations} color=\"primary\" disabled={locations.length === 1 ? true : false}>Clear</Button>\r\n            </DialogActions>\r\n        </React.Fragment>\r\n    );\r\n}","import React from 'react';\r\n\r\n// Material UI Components\r\nimport {DialogContent, DialogContentText, DialogActions, Button } from '@material-ui/core';\r\n\r\n// Style sheet\r\nimport Style from './Delete.module.scss';\r\n\r\nexport function Delete({locationPicked, handleDialogClose, handleDelete}){\r\n    return(\r\n        <React.Fragment>\r\n            <DialogContent>\r\n                <DialogContentText>Are you sure you want to delete {locationPicked.name}</DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions disableSpacing>\r\n                <Button className={Style.GreyBtn} onClick={handleDialogClose}>No</Button>\r\n                <Button className={Style.RedBtn} onClick={() => handleDelete(locationPicked.id, locationPicked.name)}>Yes</Button>\r\n            </DialogActions>\r\n        </React.Fragment>\r\n    );\r\n}","import React from 'react';\r\n\r\n// Material UI Components\r\nimport { Dialog, DialogTitle } from '@material-ui/core';\r\n\r\n// Layouts\r\nimport {Add} from './layouts/Add/Add';\r\nimport {ListComponent} from './layouts/List/List';\r\nimport {Delete} from './layouts/Delete/Delete';\r\n\r\nexport function DialogComponent({dialog, dialogType, selectedLocation, selectedLocationError, locations, locationPicked, handleOpenLocationData, handleDialogClose, handleClearLocations, handleKeyPress, onChange, handleDelete, handleSubmit}){\r\n    return(\r\n        <Dialog\r\n            open={dialog}\r\n            keepMounted\r\n            onClose={handleDialogClose}\r\n            aria-labelledby=\"alertDialogTitle\"\r\n            fullWidth={true}\r\n            maxWidth=\"xs\"\r\n        >\r\n            <DialogTitle id=\"alertDialogTitle\">\r\n                {\r\n                    dialogType === \"Add\" ? \"Add new location\" : dialogType === \"Del\" ? \"Delete?\" : \"Locations\"\r\n                }\r\n            </DialogTitle>\r\n\r\n            {\r\n                dialogType === \"Add\" \r\n                ? <Add \r\n                    selectedLocation={selectedLocation} \r\n                    selectedLocationError={selectedLocationError} \r\n                    handleDialogClose={handleDialogClose}\r\n                    handleKeyPress={handleKeyPress}\r\n                    onChange={onChange}\r\n                    handleSubmit={handleSubmit} /> \r\n                : dialogType === \"Del\" \r\n                ? <Delete \r\n                    locationPicked={locationPicked} \r\n                    handleDialogClose={handleDialogClose}\r\n                    handleDelete={handleDelete} /> \r\n                : <ListComponent \r\n                    locations={locations}\r\n                    handleOpenLocationData={handleOpenLocationData}\r\n                    handleDialogClose={handleDialogClose} \r\n                    handleClearLocations={handleClearLocations} />\r\n            }\r\n            \r\n        </Dialog>\r\n    );\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Material UI Components\r\nimport { Fade } from '@material-ui/core';\r\n\r\n// Components\r\nimport {TabsComponent} from '../Tabs/Tabs';\r\nimport {Content} from './components/Content/Content';\r\nimport {PaperComponent} from './components/Paper/Paper';\r\nimport {DialogComponent} from './components/Dialog/Dialog';\r\n\r\n// Style sheet\r\nimport Style from './Clock.module.scss';\r\n\r\nexport class Clock extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.interval = null;\r\n        this.state = {\r\n            selectedLocation: \"\",\r\n            selectedLocationError: false,\r\n            newLocation: null,\r\n            locations: [],\r\n            cities: [],\r\n            locationPicked: null,\r\n            dialog: false,\r\n            dialogType: \"\",\r\n            currentMinute: null,\r\n        }\r\n    }\r\n\r\n    static propTypes = {\r\n        selectedLocation: PropTypes.string,\r\n        selectedLocationError: PropTypes.bool,\r\n        newLocation: PropTypes.object,\r\n        locations: PropTypes.object,\r\n        cities: PropTypes.object,\r\n        locationPicked: PropTypes.object,\r\n        dialog: PropTypes.bool,\r\n        dialogType: PropTypes.string,\r\n        currentMinute: PropTypes.number,\r\n    }\r\n\r\n    // This method will create the local time object\r\n    createLocal = () => {\r\n        const date = new Date();\r\n        \r\n        const dataString = date.toString();\r\n        const dataArray = dataString.split(\"\");\r\n\r\n        const offset = dataArray.splice(29, 4); \r\n        // const operator = dataArray[28]\r\n        const removeZero = offset.filter(num => num !== \"0\");\r\n        const gmt = parseInt(removeZero.join(\"\"));\r\n        const converGmtToSeconds = gmt * 60 * 60;\r\n        // const joinOffset = String(operator + converGmtToSeconds)\r\n\r\n        const local = {\r\n            name: \"Local\",\r\n            timezone: converGmtToSeconds,\r\n            sys: {\r\n                country: \"Country\"\r\n            }\r\n        }\r\n\r\n        return local\r\n    }\r\n\r\n    // This method will check if the minute changed, if so it will re render the locations state \r\n    checkTime = () => {\r\n        const currentMinute = this.state.currentMinute;\r\n\r\n        this.interval = setInterval(() => {\r\n            let date = new Date();\r\n            let minute = date.getMinutes();\r\n\r\n            if(currentMinute !== minute){\r\n                this.setState({\r\n                    locations: this.state.locations,\r\n                    currentMinute: minute\r\n                })\r\n            }\r\n        }, 1000);\r\n    }\r\n    \r\n    // This method will clear the interval once the user exits from the page\r\n    componentWillUnmount(){\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    componentDidMount(){ \r\n        clearInterval(this.interval);\r\n\r\n        this.checkTime();\r\n\r\n        // Will set a variables with the value of the local storage \r\n        const setLocations = JSON.parse(localStorage.getItem(\"LocalLocations\") || \"[]\");\r\n        const setCities = JSON.parse(localStorage.getItem(\"LocalCities\") || \"[]\");\r\n\r\n        // Will check whether setLocations, setCities is empty or setLocations has atleast 1 location \r\n        if(setLocations.length === 0 || setCities.length === 0 || setLocations.length === 1){\r\n            const newLocations = [];\r\n            const local = this.createLocal()\r\n\r\n            newLocations.push(local);\r\n\r\n            this.setState({\r\n                locations: newLocations,\r\n                locationPicked: local,\r\n            })\r\n            return\r\n        // If not empty, will update the locations with the current data \r\n        } else{\r\n            this.setState({\r\n                locations: setLocations,\r\n                cities: setCities,\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    // This method will change the selectedLocation to whatever the user inputs\r\n    handleLocationChange = (event) => {\r\n        this.setState({\r\n            selectedLocation: event.target.value,\r\n        })\r\n    }\r\n\r\n    // This method will handle the text field when the user clicks on it and will set the selectedLocation to empty\r\n    handleFocus = () => {\r\n        if(this.state.selectedLocationError === true || this.state.selectedLocation === \"Correct Input\"){\r\n            this.setState({\r\n                selectedLocation: \"\",\r\n                selectedLocationError: false,\r\n            })\r\n        }\r\n    }\r\n\r\n    // This method will handle the key that the user presses\r\n    handleKeyPress = (event) => {\r\n        this.handleFocus(); \r\n        if(this.state.dialog === true){\r\n            if(event.key === 'Enter'){\r\n                this.handleSubmit(); \r\n            } else if(event.key === 'Escape'){\r\n                this.handleDialogClose()\r\n            }\r\n        }\r\n    }\r\n\r\n    // This method will fetch the api with the location that the user chooses\r\n    handleSubmit = () => {\r\n        const location = this.state.selectedLocation;\r\n        const key = \"f3ef21c55d165f4433893081d602af6e\";\r\n    \r\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${location}&APPID=${key}`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          this.setState({\r\n            newLocation: data,\r\n          });\r\n          this.handleUpdate(this.state.newLocation)\r\n        })\r\n        .catch(Error);\r\n    }\r\n\r\n    // This method will validate the users input and will either add the location or displays and error\r\n    handleUpdate = (newLocation) => {\r\n        const errors = [\"400\", \"401\", \"403\", \"404\", \"405\", \"409\", \"500\", \"503\"];\r\n    \r\n        // Getting current state of locations list\r\n        const newLocations = [...this.state.locations];\r\n    \r\n        // Getting current state of cities list & current input by user\r\n        const currentCities = [...this.state.cities];\r\n\r\n        // Checking if an error has occurred to display the incorrect message\r\n        if(newLocation.cod === errors.find(number => number === newLocation.cod)){\r\n            this.setState({\r\n                selectedLocation: \"Incorrect Input\",\r\n                selectedLocationError: true,\r\n                newLocation: null,\r\n            })\r\n          return\r\n        }else if(newLocation.name.toLowerCase() === this.state.cities.find(name => name === newLocation.name.toLowerCase())){\r\n            this.setState({\r\n                selectedLocation: \"City already inserted\",\r\n                selectedLocationError: true,\r\n                newLocation: null,\r\n            })\r\n            return\r\n        }else{\r\n            // Adding the new location selected in to the locations Array\r\n            newLocations.push(newLocation);\r\n            \r\n            // Adding the input from the user to the new cities list\r\n            currentCities.push(newLocation.name.toLowerCase());\r\n\r\n            // Setting the Locations array into our local storage\r\n            localStorage.setItem(\"LocalLocations\", JSON.stringify(newLocations));\r\n\r\n            // Setting the Cities array into our local storage\r\n            localStorage.setItem(\"LocalCities\", JSON.stringify(currentCities));\r\n            \r\n            // Setting the locations array with the new locations array & the cities array with the new cities array\r\n            this.setState({\r\n                selectedLocation: \"Correct Input\",\r\n                newLocation: null,\r\n                locations: newLocations,\r\n                cities: currentCities,\r\n            })\r\n        }\r\n    }\r\n\r\n    // This method will display the data from the location that the user chooses\r\n    handleOpenLocationData = (location) => {\r\n        this.setState({\r\n            locationPicked: location\r\n        })\r\n        this.handleDialogClose();\r\n    }\r\n\r\n    // This method will clear the state and the local storage\r\n    handleClearLocations = () => {\r\n        // Removing the Locations & Cities arrays from the local storage\r\n        localStorage.removeItem(\"LocalLocations\");\r\n        localStorage.removeItem(\"LocalCities\");\r\n\r\n        this.setState({\r\n            selectedLocation: \"\",\r\n            selectedLocationError: false,\r\n            newLocation: null,\r\n            locations: [],\r\n            cities: [],\r\n        })\r\n\r\n        this.componentDidMount()\r\n    }\r\n\r\n    // This method will delete the location from the state\r\n    handleDelete = (id, name) => {\r\n        const itemId = id;\r\n        const itemName = name.toLowerCase();\r\n\r\n        // Getting the current state of locations array\r\n        const currentlocations = [...this.state.locations];\r\n\r\n        // Remove the item from the new locations array\r\n        const newlocations = currentlocations.filter(item => {\r\n            return item.id !== itemId\r\n        });\r\n\r\n        // Getting the current state of cities array\r\n        const currentCities = [...this.state.cities];\r\n        \r\n        // Remove the item from the new cities array\r\n        const newCities = currentCities.filter(item => {\r\n        return item !== itemName\r\n        });\r\n\r\n        // Setting the Locations array into our local storage\r\n        localStorage.setItem(\"LocalLocations\", JSON.stringify(newlocations));\r\n\r\n        // Setting the Cities array into our local storage\r\n        localStorage.setItem(\"LocalCities\", JSON.stringify(newCities));\r\n\r\n        this.setState({\r\n            locationPicked: this.state.locations[0],\r\n            locations: newlocations,\r\n            cities: newCities,\r\n        })\r\n\r\n        this.componentDidMount();\r\n        this.handleDialogClose();\r\n    }\r\n\r\n    // This method will open the popup\r\n    handleDialogOpen = (dialogType) => {\r\n        this.setState(state => ({\r\n            dialog: !state.dialog,\r\n            dialogType: dialogType,\r\n        }))\r\n    }\r\n\r\n    // This method will close the popup\r\n    handleDialogClose = () => {\r\n        this.setState(state => ({\r\n            dialog: !state.dialog,\r\n        }))\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <TabsComponent location={0} />\r\n                <Fade timeout={500} in>\r\n                    <React.Fragment>\r\n                        <div className={Style.Container}>\r\n                            <Content local={this.createLocal()} locationPicked={this.state.locationPicked} />\r\n                        </div>\r\n                        <div className={Style.Toolbar}>\r\n                            <PaperComponent locationPicked={this.state.locationPicked} handleDialogOpen={this.handleDialogOpen} />\r\n                        </div>\r\n                    </React.Fragment>\r\n                </Fade>\r\n                <DialogComponent \r\n                        dialog={this.state.dialog} \r\n                        dialogType={this.state.dialogType} \r\n                        selectedLocation={this.state.selectedLocation} \r\n                        selectedLocationError={this.state.selectedLocationError} \r\n                        locations={this.state.locations} \r\n                        locationPicked={this.state.locationPicked} \r\n                        handleOpenLocationData={this.handleOpenLocationData}\r\n                        handleClearLocations={this.handleClearLocations}\r\n                        handleDialogClose={this.handleDialogClose}\r\n                        handleKeyPress={this.handleKeyPress}\r\n                        onChange={this.handleLocationChange}\r\n                        handleSubmit={this.handleSubmit} \r\n                        handleDelete={this.handleDelete} />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\n// Material UI Components\r\nimport { List, ListItem, ListItemText, Typography, ListItemSecondaryAction, IconButton, Switch, Tooltip } from '@material-ui/core';\r\n\r\n// Style sheet\r\nimport Style from './List.module.scss';\r\n\r\n// Icons\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\nexport function ListComponent({ alarms, edit, handleAlarmEdit, handleAlarmDelete, handleSwitchChange }){\r\n    return(\r\n        <List className={Style.List}>\r\n            {\r\n                alarms.length === 0 \r\n                \r\n                ? <ListItem className={Style.Center}>\r\n                    <ListItemText\r\n                        primary=\"No alarms found. Please add alarm.\"\r\n                    />\r\n                </ListItem>\r\n                :\r\n                alarms.map(alarm => {\r\n                    return(\r\n                        <ListItem key={alarm.id} divider>\r\n                            <ListItemText\r\n                                children={<Typography className={alarm.active === true ? Style.Active : Style.Inactive} variant=\"h4\">{`${alarm.hours >= 0 && alarm.hours < 10 ? String(`0${alarm.hours}`) : alarm.hours}:${alarm.minutes >= 0 && alarm.minutes < 10 ? String(`0${alarm.minutes}`) : alarm.minutes}`}</Typography>}\r\n                                secondary={alarm.label}\r\n                            />\r\n                            <ListItemSecondaryAction edge=\"end\">\r\n                                {\r\n                                    edit === true \r\n                                        ? <React.Fragment>\r\n                                            <Tooltip title={`Edit ${alarm.label} alarm`} aria-label={`Edit ${alarm.label} alarm`} placement=\"top\">\r\n                                                <span>\r\n                                                    <IconButton onClick={() => handleAlarmEdit(alarm)} className={Style.GreyBtn} aria-label={`Edit ${alarm.label} alarm`}><EditIcon /></IconButton>\r\n                                                </span>\r\n                                            </Tooltip>\r\n                                            <Tooltip title={`Delete ${alarm.label} alarm`} aria-label={`Delete ${alarm.label} alarm`} placement=\"top\">\r\n                                                <span>\r\n                                                    <IconButton onClick={() => handleAlarmDelete(alarm)} className={Style.RedBtn} aria-label={`Delete ${alarm.label} alarm`}><DeleteForeverIcon /></IconButton>\r\n                                                </span>\r\n                                            </Tooltip>\r\n                                        </React.Fragment> \r\n                                        : <Switch size=\"medium\" color=\"primary\" onChange={() => handleSwitchChange(alarm)} checked={alarm.active === true ? true : false} />\r\n                                }\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                    );\r\n                })\r\n            }\r\n        </List>\r\n    );\r\n}","import React from 'react';\r\n\r\n// Material UI Components\r\nimport { Zoom, Paper, Tooltip, Button } from '@material-ui/core';\r\n\r\n// Style sheet\r\nimport Style from './Paper.module.scss';\r\n\r\n// Icons\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nexport function PaperComponent({ alarms, edit, handleDialogOpen, handleEdit, handleClearAlarms }){\r\n    return(\r\n        <Zoom timeout={500} in>\r\n            <Paper className={Style.Paper} variant=\"outlined\" >\r\n                <div>\r\n                    <Tooltip title={ alarms.length === 0 ? \"\" : edit === true ? \"Edit Mode Off\" : \"Edit Mode On\"} aria-label=\"Edit Mode\" placement=\"top\">\r\n                        <span>\r\n                            <Button aria-label=\"Edit Mode\" onClick={handleEdit} className={alarms.length === 0 ? \"\" : edit === true ? Style.PrimaryBtn : Style.BlackBtn} size=\"large\" disabled={alarms.length === 0 ? true : false}>Edit</Button>\r\n                        </span>\r\n                    </Tooltip> \r\n                    <Tooltip title={edit === true ? \"Clear Alarms\" : \"\"} aria-label=\"Clear Alarms\" placement=\"top\">\r\n                        <span>\r\n                            <Button aria-label=\"Clear Alarms\" onClick={handleClearAlarms} className={edit === true ? `${Style.RedBtn} ${Style.Visible}` : Style.Hidden} size=\"large\">Clear</Button>\r\n                        </span>\r\n                    </Tooltip> \r\n                </div>\r\n                <Tooltip title=\"Add Alarm\" aria-label=\"Add Alarm\" placement=\"top\">\r\n                    <Button aria-label=\"Add Alarm\" onClick={() => handleDialogOpen(\"Add\")} className={Style.BlackBtn} size=\"large\"><AddIcon /></Button>\r\n                </Tooltip>\r\n            </Paper>\r\n        </Zoom>\r\n    );\r\n}","import React from 'react';\r\n\r\n// Material UI Components\r\nimport { Typography, Tooltip,  DialogContent, TextField, Box, DialogActions, Button } from '@material-ui/core';\r\n\r\n// Style sheet\r\nimport Style from './Add.module.scss';\r\n\r\n// Icons\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\n\r\nexport function Add({alarmPicked, hours, minutes, keyPressed, handleTime, onChangeTextfield, handleDialogClose, handleSave, handleSaveEdit}){\r\n    return(\r\n        <React.Fragment>\r\n            <DialogContent>\r\n                <div className={Style.Time}>\r\n                    <div className={Style.TimeGroup}>\r\n                        <Typography variant=\"overline\" align=\"center\">Hours</Typography>\r\n                        <Tooltip \r\n                            className={Style.Tooltip} \r\n                            title={hours === 23 ? \"\" : keyPressed === \"Control\" ? \"Add 10 hours\" : \"Add 1 hour\"} \r\n                            aria-label={keyPressed === \"Control\" ? \"Add 10 hours\" : \"Add 1 hour\"} \r\n                            placement=\"top\">\r\n                            <span>\r\n                                <Button \r\n                                    onClick={hours >= 0 && hours < 23 ? () => handleTime(\"Add\", \"Hour\") : null} \r\n                                    className={hours >= 0 && hours < 23 ? Style.GreyBtn : \"\"} \r\n                                    variant=\"outlined\" \r\n                                    size=\"medium\" \r\n                                    fullWidth \r\n                                    disabled={hours >= 0 && hours < 23 ? false : true} >\r\n                                        <KeyboardArrowUpIcon/>\r\n                                </Button>\r\n                            </span>\r\n                        </Tooltip>\r\n                        <Typography variant=\"h3\" color=\"primary\" align=\"center\">\r\n                            {hours >= 0 && hours < 10 ? String(`0${hours}`) : hours}\r\n                        </Typography>\r\n                        <Tooltip \r\n                            className={Style.Tooltip} \r\n                            title={hours === 0 ? \"\" : keyPressed === \"Control\" ? \"Subtract 10 hours\" : \"Subtract 1 hour\"} \r\n                            aria-label={keyPressed === \"Control\" ? \"Subtract 10 hours\" : \"Subtract 1 hour\"} \r\n                            placement=\"bottom\">\r\n                            <span>\r\n                                <Button \r\n                                    onClick={hours === 0 ? null : () => handleTime(\"Subtract\", \"Hour\")} \r\n                                    className={hours === 0 ? \"\" : Style.GreyBtn} \r\n                                    variant=\"outlined\" \r\n                                    size=\"medium\" \r\n                                    fullWidth \r\n                                    disabled={hours === 0 ? true : false} >\r\n                                        <KeyboardArrowDownIcon />\r\n                                </Button>\r\n                            </span>\r\n                        </Tooltip>\r\n                    </div>\r\n                    <Box mt={3}>\r\n                        <Typography variant=\"h3\" color=\"primary\" align=\"center\">:</Typography>\r\n                    </Box>\r\n                    <div className={Style.TimeGroup}>\r\n                        <Typography variant=\"overline\" align=\"center\">Minutes</Typography>\r\n                        <Tooltip \r\n                            className={Style.Tooltip} \r\n                            title={minutes === 59 ? \"\" : keyPressed === \"Control\" ? \"Add 10 minutes\" :  \"Add 1 minute\"} \r\n                            aria-label={keyPressed === \"Control\" ? \"Add 10 minutes\" :  \"Add 1 minute\"} \r\n                            placement=\"top\">\r\n                            <span>\r\n                                <Button \r\n                                    onClick={minutes >= 0 && minutes < 59 ? () => handleTime(\"Add\", \"Minute\") : null} \r\n                                    className={minutes >= 0 && minutes < 59 ? Style.GreyBtn : \"\"} \r\n                                    variant=\"outlined\" \r\n                                    size=\"medium\" \r\n                                    fullWidth \r\n                                    disabled={minutes >= 0 && minutes < 59 ? false : true} >\r\n                                        <KeyboardArrowUpIcon />\r\n                                </Button>\r\n                            </span>\r\n                        </Tooltip>\r\n                        <Typography variant=\"h3\" color=\"primary\" align=\"center\">\r\n                            {minutes >= 0 && minutes < 10 ? String(`0${minutes}`) : minutes}\r\n                        </Typography>\r\n                        <Tooltip \r\n                            className={Style.Tooltip} \r\n                            title={minutes === 0 ? \"\" : keyPressed === \"Control\" ? \"Subtract 10 minutes\" : \"Subtract 1 minute\"} \r\n                            aria-label={keyPressed === \"Control\" ? \"Subtract 10 minutes\" : \"Subtract 1 minute\"}  \r\n                            placement=\"bottom\">\r\n                            <span>\r\n                                <Button \r\n                                    onClick={minutes === 0 ? null : () => handleTime(\"Subtract\", \"Minute\")} \r\n                                    className={minutes === 0 ? \"\" : Style.GreyBtn} \r\n                                    variant=\"outlined\" \r\n                                    size=\"medium\" \r\n                                    fullWidth \r\n                                    disabled={minutes === 0 ? true : false} >\r\n                                        <KeyboardArrowDownIcon />\r\n                                </Button>\r\n                            </span>\r\n                        </Tooltip>\r\n                    </div>\r\n                </div>\r\n                <Box m={3} />\r\n                <TextField\r\n                    label=\"Label\"\r\n                    placeholder={alarmPicked === null ? 'Try \"Work\"' : alarmPicked.label}\r\n                    type=\"string\"\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    onChange={onChangeTextfield}\r\n                />\r\n\r\n            </DialogContent>\r\n            <DialogActions disableSpacing>\r\n                <Button className={Style.GreyBtn} onClick={handleDialogClose}>Cancel</Button>\r\n                <Button onClick={alarmPicked === null ? handleSave : () => handleSaveEdit(alarmPicked)} color=\"primary\">Save</Button>\r\n            </DialogActions>\r\n        </React.Fragment>\r\n    );\r\n}","import React from 'react';\r\n\r\n// Material UI Components\r\nimport {DialogContent, DialogContentText, DialogActions, Button } from '@material-ui/core';\r\n\r\n// Style sheet\r\nimport Style from './Delete.module.scss';\r\n\r\nexport function Delete({alarmPicked, dialogType, handleDialogClose, handleDelete, handleClearAlarms}){\r\n    return(\r\n        <React.Fragment>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {\r\n                        dialogType === \"Del\" ? `Are you sure you want to delete ${alarmPicked.label}` : \"Are you sure you want to clear the alarms\"\r\n                    }\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions disableSpacing>\r\n                <Button className={Style.GreyBtn} onClick={handleDialogClose}>No</Button>\r\n                <Button className={Style.RedBtn} onClick={dialogType === \"Del\" ? () => handleDelete(alarmPicked.id) : () => handleClearAlarms()}>Yes</Button>\r\n            </DialogActions>\r\n        </React.Fragment>\r\n    );\r\n}","import React from 'react';\r\n\r\n// Material UI Components\r\nimport { List, ListItem, ListItemText } from '@material-ui/core';\r\n\r\n// Style sheet\r\nimport Style from './Alarm.module.scss';\r\n\r\nexport function Alarm({alarmPicked, handleStop}){\r\n    return(\r\n        <List className={Style.List}>\r\n            <ListItem button onClick={() => handleStop(alarmPicked)}>\r\n                <ListItemText className={`${Style.ListBtn} ${Style.RedBtn}`} align=\"center\" primary={\"Stop\"} />\r\n            </ListItem>\r\n        </List>\r\n    );\r\n}","import React from 'react';\r\n\r\n// Material UI Components\r\nimport { Dialog, DialogTitle } from '@material-ui/core';\r\n\r\n// Layouts\r\nimport {Add} from './layouts/Add/Add';\r\nimport {Delete} from './layouts/Delete/Delete';\r\nimport {Alarm} from './layouts/Alarm/Alarm';\r\n\r\nexport function DialogComponent({alarmPicked, dialog, dialogType, hours, minutes, keyPressed, handleTime, onChangeTextfield, handleSave, handleDialogClose, handleDelete, handleClearAlarms, handleSaveEdit, handleStop}){\r\n    return(\r\n        <Dialog\r\n            open={dialog}\r\n            keepMounted\r\n            onClose={handleDialogClose}\r\n            aria-labelledby=\"alertDialogTitle\"\r\n            fullWidth={true}\r\n            maxWidth=\"xs\"\r\n        >\r\n            <DialogTitle id=\"alertDialogTitle\">\r\n                {\r\n                    dialogType === \"Add\" ? \"Add new Alarm\" : dialogType === \"Del\" ? \"Delete?\" : dialogType === \"Clear\" ? \"Clear?\" : dialogType === \"Edit\" ? \"Edit Alarm\" : dialogType === \"Finish\" ? `${alarmPicked === null ? \"Alarm\" : alarmPicked.label} Complete!` : \"\"\r\n                } \r\n            </DialogTitle>\r\n            {\r\n                dialogType === \"Add\" \r\n                ? <Add \r\n                    alarmPicked={alarmPicked}\r\n                    hours={hours} \r\n                    minutes={minutes} \r\n                    keyPressed={keyPressed} \r\n                    handleTime={handleTime}\r\n                    onChangeTextfield={onChangeTextfield}\r\n                    handleDialogClose={handleDialogClose}\r\n                    handleSave={handleSave} />\r\n                : dialogType === \"Del\"  ||  dialogType === \"Clear\"\r\n                ? <Delete \r\n                    alarmPicked={alarmPicked}\r\n                    dialogType={dialogType}\r\n                    handleDialogClose={handleDialogClose}\r\n                    handleDelete={handleDelete} \r\n                    handleClearAlarms={handleClearAlarms} />\r\n                : dialogType === \"Edit\" \r\n                ? <Add \r\n                    alarmPicked={alarmPicked}\r\n                    hours={hours} \r\n                    minutes={minutes} \r\n                    handleTime={handleTime}\r\n                    onChangeTextfield={onChangeTextfield}\r\n                    handleDialogClose={handleDialogClose}\r\n                    handleSaveEdit={handleSaveEdit} />\r\n                : dialogType === \"Finish\"  \r\n                ? <Alarm \r\n                    alarmPicked={alarmPicked}\r\n                    handleStop={handleStop} />\r\n                : null\r\n            }\r\n        </Dialog>\r\n    );\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Material UI Components\r\nimport { Fade} from '@material-ui/core';\r\n\r\n// Components\r\nimport {TabsComponent} from '../Tabs/Tabs';\r\nimport {ListComponent} from './components/List/List';\r\nimport {PaperComponent} from './components/Paper/Paper';\r\nimport {DialogComponent} from './components/Dialog/Dialog';\r\n\r\n// Style sheet\r\nimport Style from './Alarm.module.scss';\r\n\r\n// Sound\r\nimport Sound from '../../sound/beep.wav';\r\n\r\nexport class Alarm extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.interval = null;\r\n        this.state = {\r\n            alarms: [],\r\n            alarmPicked: null,\r\n            edit: false, \r\n            newAlarmHours: 0,\r\n            newAlarmMinutes: 0,\r\n            newAlarmLabel: \"\",\r\n            dialog: false,\r\n            dialogType: \"\",\r\n            keyPressed: null,\r\n        }\r\n    }\r\n\r\n    static propTypes = {\r\n        alarms: PropTypes.array,\r\n        alarmPicked: PropTypes.object,\r\n        edit: PropTypes.bool,\r\n        newAlarmHours: PropTypes.number,\r\n        newAlarmMinutes: PropTypes.number,\r\n        newAlarmLabel: PropTypes.string,\r\n        dialog: PropTypes.bool,\r\n        dialogType: PropTypes.string,\r\n        keyPressed: PropTypes.string,\r\n    }\r\n\r\n    // This method will check every second if the current time is equal to the time of the alarm if so it will open the finish dialog\r\n    checkAlarmComplete = (alarms) => {\r\n        this.interval = setInterval(() => {\r\n            const date = new Date();\r\n            const hours = date.getHours();\r\n            const minutes = date.getMinutes();\r\n    \r\n            const active = alarms.filter(alarm => alarm.active === true)\r\n\r\n            active.forEach(item => {\r\n                if(item.hours === hours && item.minutes === minutes){\r\n                    this.playSound();\r\n                    this.handleDialogOpen(\"Finish\", item);\r\n                }\r\n            })\r\n        }, 1000);\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        clearInterval(this.interval);\r\n\r\n        document.removeEventListener(\"keydown\", this.handleKeypressDown, false);\r\n        document.removeEventListener(\"keyup\", this.handleKeypressUp, false);\r\n    }\r\n\r\n    componentDidMount(){ \r\n        clearInterval(this.interval);\r\n\r\n        this.audio = new Audio(Sound);\r\n\r\n        // Will set a variables with the value of the local storage \r\n        const setAlarms = JSON.parse(localStorage.getItem(\"Alarms\") || \"[]\");\r\n\r\n        this.checkAlarmComplete(setAlarms);\r\n\r\n        if(this.state.dialog === false){\r\n            this.audio.pause();\r\n        }\r\n\r\n        this.setState({\r\n            alarms: setAlarms,\r\n        })\r\n\r\n        document.addEventListener(\"keydown\", this.handleKeypressDown, false);\r\n        document.addEventListener(\"keyup\", this.handleKeypressUp, false);\r\n    }\r\n    \r\n    // This method will play the sound\r\n    playSound = () => {\r\n        clearInterval(this.interval);\r\n        this.audio.play();\r\n        this.audio.volume = 0.5;\r\n        this.audio.loop = true;\r\n    }\r\n\r\n    // This method will change the newAlarmLabel to whatever the user inputs\r\n    handleChangeTextfield = (event) => {\r\n        this.setState({\r\n            newAlarmLabel: event.target.value,\r\n        })\r\n    }\r\n\r\n    // This method will open the edit popup\r\n    handleAlarmEdit = (alarm) => {\r\n        this.setState({\r\n            alarmPicked: alarm,\r\n        })\r\n\r\n        this.handleDialogOpen(\"Edit\", alarm);\r\n    }\r\n\r\n    // This method will open the delete popup\r\n    handleAlarmDelete = (alarm) => {\r\n        this.setState({\r\n            alarmPicked: alarm,\r\n        })\r\n\r\n        this.handleDialogOpen(\"Del\");\r\n    }\r\n\r\n    // This method will open the clear popup\r\n    handleAlarmsClear = () => {\r\n        this.handleDialogOpen(\"Clear\");\r\n    }\r\n\r\n    // This method will update the switch to either be active true or false\r\n    handleSwitchChange = (alarm) => {\r\n        const newAlarms = [...this.state.alarms];\r\n\r\n        // Create new array from newAlarms array with the element that has the same id and will update the active attribute\r\n        const updateAlarm = newAlarms.filter(item => {\r\n            if(item.id === alarm.id){\r\n                item.active = !item.active\r\n            }\r\n            return item\r\n        });\r\n\r\n        // Will update the item with the updated data\r\n        newAlarms.forEach(item => {\r\n            if(item.id === updateAlarm.id){\r\n                item = updateAlarm\r\n            }\r\n        });\r\n\r\n        // Setting the Alarms array into our local storage\r\n        localStorage.setItem(\"Alarms\", JSON.stringify(newAlarms));\r\n\r\n        this.setState({\r\n            alarms: newAlarms\r\n        })\r\n\r\n        this.componentDidMount();\r\n    }\r\n\r\n    // This method will handle whenever the user presses a key on the keyboard and will execute the code on key down\r\n    handleKeypressDown = (event) => {\r\n        if(this.state.keyPressed === event.key){\r\n            return\r\n        } else if(event.key === \"Enter\"){\r\n            event.preventDefault() \r\n            if(this.state.alarmPicked === null){\r\n                this.handleSave()\r\n            } else{\r\n                this.handleSaveEdit(this.state.alarmPicked);\r\n            }\r\n        } else{\r\n            this.setState({\r\n                keyPressed: event.key\r\n            })\r\n        }\r\n    } \r\n\r\n    // This method will handle whenever the user presses a key on the keyboard and will execute the code on key up\r\n    handleKeypressUp = (event) => {\r\n        if(this.state.keyPressed === event.key){\r\n            this.setState({\r\n                keyPressed: null\r\n            })\r\n        }else{\r\n            return\r\n        }\r\n    } \r\n\r\n    // This method will update the timer depending on what button the users clicks on it will either decrease or increase the timer\r\n    handleTime = (type, clockType) => {\r\n        const currentKeyPressed = this.state.keyPressed;\r\n\r\n        let hours = this.state.newAlarmHours;\r\n        let minutes = this.state.newAlarmMinutes;\r\n\r\n        if(type === \"Add\"){\r\n            switch(clockType){\r\n                case \"Hour\":\r\n                    if(currentKeyPressed === \"Control\"){\r\n                        hours = hours + 10;\r\n\r\n                        if(hours > 23){\r\n                            hours = 23;\r\n                        }\r\n                    }else{\r\n                        hours++;\r\n                    }\r\n                    this.setState({\r\n                        newAlarmHours: hours,\r\n                    })\r\n                    break;\r\n                case \"Minute\":\r\n                    if(currentKeyPressed === \"Control\"){\r\n                        minutes = minutes + 10;\r\n\r\n                        if(minutes > 59){\r\n                            minutes = 59;\r\n                        }\r\n                    }else{\r\n                        minutes++;\r\n                    }\r\n                    this.setState({\r\n                        newAlarmMinutes: minutes,\r\n                    })\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }else if(type === \"Subtract\"){\r\n            switch(clockType){\r\n                case \"Hour\":\r\n                    if(currentKeyPressed === \"Control\"){\r\n                        hours = hours - 10;\r\n\r\n                        if(hours < 0){\r\n                            hours = 0;\r\n                        }\r\n                    }else{\r\n                        hours--;\r\n                    }\r\n                    this.setState({\r\n                        newAlarmHours: hours,\r\n                    })\r\n                    break;\r\n                case \"Minute\":\r\n                    if(currentKeyPressed === \"Control\"){\r\n                        minutes = minutes - 10;\r\n\r\n                        if(minutes < 0){\r\n                            minutes = 0;\r\n                        }\r\n                    }else{\r\n                        minutes--;\r\n                    }\r\n                    this.setState({\r\n                        newAlarmMinutes: minutes,\r\n                    })\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    // This method will save a new alarm into the alarm array\r\n    handleSave = () => {\r\n        const hours = this.state.newAlarmHours;\r\n        const minutes = this.state.newAlarmMinutes;\r\n        const label = (this.state.newAlarmLabel === \"\") ? \"Label\" : this.state.newAlarmLabel;\r\n\r\n        // Getting the current state of alarms array\r\n        const newAlarms = [...this.state.alarms];\r\n        \r\n        // Creating new alarm\r\n        const newAlarm = {\r\n            id: Math.random(),\r\n            label: label,\r\n            hours: hours,\r\n            minutes: minutes,\r\n            active: true\r\n        }\r\n\r\n        // Putting the new alarm into the newAlarms array\r\n        newAlarms.push(newAlarm);\r\n\r\n        // Setting the Alarms array into our local storage\r\n        localStorage.setItem(\"Alarms\", JSON.stringify(newAlarms));\r\n\r\n        this.setState({\r\n            alarms: newAlarms,\r\n            newAlarmHours: 0,\r\n            newAlarmMinutes: 0,\r\n            newAlarmLabel: \"\",\r\n        })\r\n\r\n        this.handleDialogClose();\r\n        // this.checkAlarmComplete(newAlarms);\r\n    }\r\n\r\n    // This method will update the state with new values that the user chooses\r\n    handleSaveEdit = (alarm) => {\r\n        const hours = this.state.newAlarmHours;\r\n        const minutes = this.state.newAlarmMinutes;\r\n        const label = this.state.newAlarmLabel;\r\n\r\n        // Getting the current state of alarms array\r\n        const newAlarms = [...this.state.alarms];\r\n\r\n        // Create new array from newAlarms array with the element that has the same id and will update its data\r\n        const updateAlarm = newAlarms.filter(item => {\r\n            if(item.id === alarm.id){\r\n                item.id = alarm.id;\r\n                item.hours = hours;\r\n                item.minutes = minutes;\r\n                item.label = label;\r\n                item.active = true;\r\n            }\r\n            return item\r\n        });\r\n        \r\n        // Will update the item with the updated data\r\n        newAlarms.forEach(item => {\r\n            if(item.id === updateAlarm.id){\r\n                item = updateAlarm\r\n            }\r\n        });\r\n\r\n        // Setting the Alarms array into our local storage\r\n        localStorage.setItem(\"Alarms\", JSON.stringify(newAlarms));\r\n        \r\n        this.setState(state => ({\r\n            alarms: newAlarms,\r\n            newAlarmHours: 0,\r\n            newAlarmMinutes: 0,\r\n            newAlarmLabel: \"\",\r\n            edit: !state.edit, \r\n        }))\r\n        \r\n        this.handleDialogClose();\r\n    }\r\n\r\n    // This method will change the edit state \r\n    handleEdit = () => {\r\n        this.setState(state => ({\r\n            edit: !state.edit,\r\n        }))\r\n    }\r\n\r\n    // This method will delete the location from the state\r\n    handleDelete = (id) => {\r\n        const itemId = id;\r\n\r\n        // Getting the current state of alarms array\r\n        const currentAlarms = [...this.state.alarms];\r\n\r\n        // Remove the item from the new alarms array\r\n        const newAlarms = currentAlarms.filter(item => {\r\n            return item.id !== itemId\r\n        });\r\n\r\n        // Setting the Alarms array into our local storage\r\n        localStorage.setItem(\"Alarms\", JSON.stringify(newAlarms));\r\n\r\n        this.setState({\r\n            alarms: newAlarms,\r\n        })\r\n\r\n        this.handleDialogClose();\r\n    }\r\n\r\n    // This method will clear the alarms and the local storage\r\n    handleClearAlarms = () => {\r\n        // Removing the Alarms arrays from the local storage\r\n        localStorage.removeItem(\"Alarms\");\r\n\r\n        this.setState({\r\n            alarms: [],\r\n            alarmPicked: null,\r\n            edit: false, \r\n            newAlarmHours: 0,\r\n            newAlarmMinutes: 0,\r\n            newAlarmLabel: \"\",\r\n            dialog: false,\r\n            dialogType: \"\",\r\n        })\r\n    }\r\n\r\n    // This method will stop the alarm once it has been completed and the user clicks on the stop button\r\n    handleStop = (alarm) => {\r\n        this.audio.pause();\r\n\r\n        // Get current state of alarms array\r\n        const newAlarms = [...this.state.alarms];\r\n\r\n        // Create new array from newAlarms array with the element that has the same id\r\n        const updateAlarm = newAlarms.filter(item => {\r\n            if(item.id === alarm.id){\r\n                item.active = !item.active\r\n            }\r\n            return item\r\n        });\r\n\r\n        // Will update the item with the updated data\r\n        newAlarms.forEach(item => {\r\n            if(item.id === updateAlarm.id){\r\n                item = updateAlarm\r\n            }\r\n        });\r\n\r\n        // Setting the Alarms array into our local storage\r\n        localStorage.setItem(\"Alarms\", JSON.stringify(newAlarms));\r\n\r\n        this.setState({\r\n            alarms: newAlarms\r\n        })\r\n\r\n        this.handleDialogClose();\r\n    }\r\n\r\n    // This method will open the popup\r\n    handleDialogOpen = (dialogType, alarmPicked) => {\r\n        this.setState(state => ({\r\n            dialog: true,\r\n            dialogType: dialogType,\r\n        }))\r\n\r\n        if(dialogType === \"Finish\"){\r\n            this.setState({\r\n                alarmPicked: alarmPicked\r\n            })\r\n        }\r\n\r\n        if(dialogType === \"Edit\"){\r\n            this.setState({\r\n                newAlarmHours: alarmPicked.hours,\r\n                newAlarmMinutes: alarmPicked.minutes,\r\n                newAlarmLabel: alarmPicked.label,\r\n            })\r\n        }\r\n    }\r\n\r\n    // This method will close the popup\r\n    handleDialogClose = () => {\r\n        this.setState({\r\n            alarmPicked: null,\r\n            dialog: false,\r\n            dialogType: \"\",\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <TabsComponent location={1} />\r\n                <Fade timeout={500} in>\r\n                    <div className={Style.Container}>\r\n                        <ListComponent \r\n                            alarms={this.state.alarms} \r\n                            edit={this.state.edit} \r\n                            handleAlarmEdit={this.handleAlarmEdit} \r\n                            handleAlarmDelete={this.handleAlarmDelete} \r\n                            handleSwitchChange={this.handleSwitchChange} />\r\n                        <PaperComponent \r\n                            alarms={this.state.alarms} \r\n                            edit={this.state.edit} \r\n                            handleEdit={this.handleEdit} \r\n                            handleClearAlarms={this.handleAlarmsClear} \r\n                            handleDialogOpen={this.handleDialogOpen} />\r\n                    </div>\r\n                </Fade>\r\n                <DialogComponent \r\n                    alarmPicked={this.state.alarmPicked}\r\n                    dialog={this.state.dialog} \r\n                    dialogType={this.state.dialogType} \r\n                    hours={this.state.newAlarmHours} \r\n                    minutes={this.state.newAlarmMinutes} \r\n                    keyPressed={this.state.keyPressed} \r\n                    onChangeTextfield={this.handleChangeTextfield} \r\n                    handleTime={this.handleTime} \r\n                    handleDialogClose={this.handleDialogClose} \r\n                    handleSave={this.handleSave} \r\n                    handleSaveEdit={this.handleSaveEdit} \r\n                    handleStop={this.handleStop}\r\n                    handleDelete={this.handleDelete} \r\n                    handleClearAlarms={this.handleClearAlarms} />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Material UI Components\r\nimport { Typography, Zoom, Button, List, ListItem, ListItemText, Fade } from '@material-ui/core';\r\n\r\n// Components\r\nimport {TabsComponent} from '../Tabs/Tabs';\r\n\r\n// Style sheet\r\nimport Style from './Stopwatch.module.scss';\r\n\r\nexport class Stopwatch extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.interval = null;\r\n        this.state = {\r\n            stopwatchOn: false,\r\n            seconds: 0,\r\n            minutes: 0,\r\n            laps: [],\r\n            quickest: null,\r\n            quickestSeconds: null,\r\n            slowest: null,\r\n        }\r\n    }\r\n\r\n    static propTypes = {\r\n        stopwatchOn: PropTypes.bool,\r\n        seconds: PropTypes.number,\r\n        minutes: PropTypes.number,\r\n        laps: PropTypes.bool,\r\n        quickest: PropTypes.object,\r\n        quickestSeconds: PropTypes.number,\r\n        slowest: PropTypes.object,\r\n    }\r\n\r\n    // This method will reset the state and will clear the interval once the user exits from the page\r\n    componentWillUnmount(){\r\n        this.handleReset();\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    // This method will create a new lap and store it in the laps array\r\n    handleLap = () => {\r\n        const newLaps = [...this.state.laps];\r\n\r\n        const newLap = {\r\n            id: Math.random(),\r\n            index: newLaps.length + 1,\r\n            seconds: this.state.seconds,\r\n            minutes: this.state.minutes,\r\n        }\r\n\r\n        newLaps.unshift(newLap);\r\n\r\n        this.setState({\r\n            laps: newLaps,\r\n        })\r\n\r\n        this.calculateQuickest(newLap, newLaps)\r\n    }\r\n\r\n    // This method will check if the new time that is lapped is the quickest or the slowest time\r\n    calculateQuickest = (currentLap, laps) => {\r\n        if(laps.length > 1){\r\n            let lastLap = laps[1];\r\n\r\n            const currentQuickestSeconds = (this.state.quickest.minutes > 0 ? this.state.quickest.minutes * 60 : 0) + this.state.quickest.seconds;\r\n            const currentSlowestSeconds = (this.state.slowest.minutes > 0 ? this.state.slowest.minutes * 60 : 0) + this.state.slowest.seconds;\r\n            const currentPreviousLapSeconds = (lastLap.minutes > 0 ? lastLap.minutes * 60 : 0) + lastLap.seconds;\r\n            const currentLapSeconds = (currentLap.minutes > 0 ? currentLap.minutes * 60 : 0) + currentLap.seconds;\r\n\r\n            const calculateCurrentLap = currentLapSeconds - currentPreviousLapSeconds;\r\n\r\n            const quickestSeconds = (this.state.quickestSeconds === null) ? currentQuickestSeconds : this.state.quickestSeconds;\r\n\r\n            if(calculateCurrentLap < quickestSeconds){\r\n                this.setState({\r\n                    quickest: currentLap,\r\n                    quickestSeconds: calculateCurrentLap\r\n                })\r\n                return\r\n            } else if(calculateCurrentLap > currentSlowestSeconds){\r\n                this.setState({\r\n                    slowest: currentLap\r\n                })\r\n                return\r\n            }else{\r\n                return\r\n            }\r\n        } else{\r\n            this.setState({\r\n                quickest: currentLap,\r\n                slowest: currentLap\r\n            })\r\n            return\r\n        }\r\n    }\r\n\r\n    // This method will update the Laps Array and the stopwatch to the data from the lap that the user chooses. Then it will call the handleStop method. \r\n    handleUpdateStopwatch = (index) => {\r\n        const currentLaps = [...this.state.laps];\r\n\r\n        const newLaps = currentLaps.filter(lap => lap.index <= index);\r\n\r\n        const lap = newLaps[0];\r\n\r\n        const quickest = (newLaps.find(lap => lap.id === this.state.quickest.id) === true) ? this.state.quickest : newLaps[newLaps.length - 1];\r\n        const slowest = (newLaps.find(lap => lap.id === this.state.slowest.id) === true) ? this.state.slowest : newLaps[newLaps.length - 1];\r\n\r\n        this.setState(state => ({\r\n            stopwatchOn: (state.stopwatchOn === false) ? false : !state.stopwatchOn,\r\n            seconds: lap.seconds,\r\n            minutes: lap.minutes,\r\n            laps: newLaps,\r\n            quickest: quickest,\r\n            quickestSeconds: null,\r\n            slowest: slowest,\r\n        }))\r\n        \r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    // This method will reset the stopwatch\r\n    handleReset = () => {\r\n        this.setState({\r\n            stopwatchOn: false,\r\n            seconds: 0,\r\n            minutes: 0,\r\n            laps: [],\r\n            quickest: null,\r\n            slowest: null,\r\n        })\r\n    }\r\n\r\n    // This method will pause the stopwatch\r\n    handleStop = () => {\r\n        clearInterval(this.interval);\r\n        this.setState(state => ({\r\n            stopwatchOn: !state.stopwatchOn,\r\n        }))\r\n    }\r\n\r\n    // This method will start the stopwatch\r\n    handleStart = () => {\r\n        let seconds = this.state.seconds;\r\n        let minutes = this.state.minutes;\r\n\r\n        this.interval = setInterval(() => {\r\n            seconds++;\r\n            if(seconds >= 60){\r\n                seconds = 0\r\n                minutes++;\r\n            }\r\n            this.setState({\r\n                seconds: seconds,\r\n                minutes: minutes,\r\n            })\r\n        }, 1000);\r\n\r\n        this.setState(state => ({\r\n            stopwatchOn: !state.stopwatchOn,\r\n        }))\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <TabsComponent location={2} />\r\n                <Fade timeout={500} in>\r\n                    <div className={Style.Container}>\r\n                        <div className={Style.Time}>\r\n                            <Typography variant=\"h1\" color=\"primary\" align=\"center\">\r\n                                {this.state.minutes >= 0 && this.state.minutes < 10 ? String(`0${this.state.minutes}`) : this.state.minutes}\r\n                            </Typography>\r\n                            <Typography variant=\"h2\" color=\"primary\" align=\"center\">:</Typography>\r\n                            <Typography variant=\"h1\" color=\"primary\" align=\"center\">\r\n                                {this.state.seconds >= 0 && this.state.seconds < 10 ? String(`0${this.state.seconds}`) : this.state.seconds}\r\n                            </Typography>\r\n                        </div>\r\n                        <Zoom timeout={500} in>\r\n                            <div className={Style.ButtonGroup}>\r\n                                {\r\n                                    this.state.stopwatchOn === true \r\n                                        ? <Button onClick={this.handleLap} className={Style.GreyBtn} variant=\"outlined\" size=\"large\" >Lap</Button>\r\n                                            : <Button onClick={this.handleReset} className={Style.GreyBtn} variant=\"outlined\" size=\"large\" >Reset</Button>\r\n                                }\r\n                                {\r\n                                    this.state.stopwatchOn === true \r\n                                        ? <Button onClick={this.handleStop} className={Style.RedBtn} variant=\"outlined\" size=\"large\" >Stop</Button>\r\n                                            : <Button onClick={this.handleStart} className={Style.GreenBtn} variant=\"outlined\" size=\"large\" >Start</Button>\r\n                                }\r\n                            </div>\r\n                        </Zoom>\r\n                        <List className={Style.List}>\r\n                            {\r\n                                this.state.laps.map(lap => {\r\n                                    return(\r\n                                        <ListItem key={lap.id} button divider onClick={() => this.handleUpdateStopwatch(lap.index)}>\r\n                                            <ListItemText align=\"left\" secondary={`Lap ${lap.index}`} />\r\n                                            {/* <div style={{flex: \"1\"}} /> */}\r\n                                            <ListItemText \r\n                                                align=\"right\" \r\n                                                primary={`${lap.minutes >= 0 && lap.minutes < 10 ? String(`0${lap.minutes}`) : lap.minutes}:${lap.seconds >= 0 && lap.seconds < 10 ? String(`0${lap.seconds}`) : lap.seconds}`} \r\n                                                className={lap.id === this.state.quickest.id && lap.id === this.state.slowest.id ? Style.Normal : lap.id === this.state.quickest.id ? Style.Fastest \r\n                                                                : lap.id === this.state.slowest.id  ? Style.Slowest : Style.Normal}\r\n                                            />\r\n                                        </ListItem>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </List>\r\n                    </div>\r\n                </Fade>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\n// Material UI Components\r\nimport { Typography, Tooltip, Button, Box,} from '@material-ui/core';\r\n\r\n// Style sheet\r\nimport Style from './Time.module.scss';\r\n\r\n// Icons\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\n\r\nexport function Time({timerOn, seconds, minutes, hours, keyPressed, handleTime}){\r\n    return(\r\n        <div className={Style.Time}>\r\n            <div className={Style.TimeGroup}>\r\n                <Typography variant=\"overline\" align=\"center\">Hours</Typography>\r\n                <Tooltip \r\n                    className={timerOn === true ? Style.Hidden :Style.Tooltip} \r\n                    title={hours === 23 ? \"\" : keyPressed === \"Control\" ? \"Add 10 hours\" : \"Add 1 hour\"} \r\n                    aria-label={keyPressed === \"Control\" ? \"Add 10 hours\" : \"Add 1 hour\"} \r\n                    placement=\"top\">\r\n                    <span>\r\n                        <Button \r\n                            onClick={hours >= 0 && hours < 23 ? () => handleTime(\"Add\", \"Hour\") : handleTime()} \r\n                            className={timerOn === true ? Style.Hidden : hours >= 0 && hours < 23 ? Style.GreyBtn : \"\"} \r\n                            variant=\"outlined\" \r\n                            size=\"large\" \r\n                            fullWidth \r\n                            disabled={hours >= 0 && hours < 23 ? false : true} >\r\n                                <KeyboardArrowUpIcon/>\r\n                        </Button>\r\n                    </span>\r\n                </Tooltip>\r\n                <Typography variant=\"h2\" color=\"primary\" align=\"center\">\r\n                    {hours >= 0 && hours < 10 ? String(`0${hours}`) : hours}\r\n                </Typography>\r\n                <Tooltip \r\n                    className={timerOn === true ? Style.Hidden :Style.Tooltip} \r\n                    title={hours === 0 ? \"\" : keyPressed === \"Control\" ? \"Subtract 10 hours\" : \"Subtract 1 hour\"} \r\n                    aria-label={keyPressed === \"Control\" ? \"Subtract 10 hours\" : \"Subtract 1 hour\"} \r\n                    placement=\"bottom\">\r\n                    <span>\r\n                        <Button \r\n                            onClick={hours === 0 ? handleTime() : () => handleTime(\"Subtract\", \"Hour\")} \r\n                            className={timerOn === true ? Style.Hidden : hours === 0 ? \"\" : Style.GreyBtn} \r\n                            variant=\"outlined\" \r\n                            size=\"large\" \r\n                            fullWidth \r\n                            disabled={hours === 0 ? true : false} >\r\n                                <KeyboardArrowDownIcon />\r\n                        </Button>\r\n                    </span>\r\n                </Tooltip>\r\n            </div>\r\n            <Box mt={3}>\r\n                <Typography variant=\"h2\" color=\"primary\" align=\"center\">:</Typography>\r\n            </Box>\r\n            <div className={Style.TimeGroup}>\r\n                <Typography variant=\"overline\" align=\"center\">Minutes</Typography>\r\n                <Tooltip \r\n                    className={timerOn === true ? Style.Hidden :Style.Tooltip} \r\n                    title={minutes === 59 ? \"\" : keyPressed === \"Control\" ? \"Add 10 minutes\" :  \"Add 1 minute\"} \r\n                    aria-label={keyPressed === \"Control\" ? \"Add 10 minutes\" :  \"Add 1 minute\"} \r\n                    placement=\"top\">\r\n                    <span>\r\n                        <Button \r\n                            onClick={minutes >= 0 && minutes < 59 ? () => handleTime(\"Add\", \"Minute\") : handleTime()} \r\n                            className={timerOn === true ? Style.Hidden : minutes >= 0 && minutes < 59 ? Style.GreyBtn : \"\"} \r\n                            variant=\"outlined\" \r\n                            size=\"large\" \r\n                            fullWidth \r\n                            disabled={minutes >= 0 && minutes < 59 ? false : true} >\r\n                                <KeyboardArrowUpIcon />\r\n                        </Button>\r\n                    </span>\r\n                </Tooltip>\r\n                <Typography variant=\"h2\" color=\"primary\" align=\"center\">\r\n                    {minutes >= 0 && minutes < 10 ? String(`0${minutes}`) : minutes}\r\n                </Typography>\r\n                <Tooltip \r\n                    className={timerOn === true ? Style.Hidden :Style.Tooltip} \r\n                    title={minutes === 0 ? \"\" : keyPressed === \"Control\" ? \"Subtract 10 minutes\" : \"Subtract 1 minute\"} \r\n                    aria-label={keyPressed === \"Control\" ? \"Subtract 10 minutes\" : \"Subtract 1 minute\"}  \r\n                    placement=\"bottom\">\r\n                    <span>\r\n                        <Button \r\n                            onClick={minutes === 0 ? handleTime() : () => handleTime(\"Subtract\", \"Minute\")} \r\n                            className={timerOn === true ? Style.Hidden : minutes === 0 ? \"\" : Style.GreyBtn} \r\n                            variant=\"outlined\" \r\n                            size=\"large\" \r\n                            fullWidth \r\n                            disabled={minutes === 0 ? true : false} >\r\n                                <KeyboardArrowDownIcon />\r\n                        </Button>\r\n                    </span>\r\n                </Tooltip>\r\n            </div>\r\n            <Box mt={3}>\r\n                <Typography variant=\"h2\" color=\"primary\" align=\"center\">:</Typography>\r\n            </Box>\r\n            <div className={Style.TimeGroup}>\r\n                <Typography variant=\"overline\" align=\"center\">Seconds</Typography>\r\n                <Tooltip \r\n                    className={timerOn === true ? Style.Hidden :Style.Tooltip} \r\n                    title={minutes === 59 ? \"\" : keyPressed === \"Control\" ? \"Add 10 seconds\" :  \"Add 1 second\"} \r\n                    aria-label={keyPressed === \"Control\" ? \"Add 10 seconds\" :  \"Add 1 second\"} \r\n                    placement=\"top\">\r\n                    <span>\r\n                        <Button \r\n                            onClick={seconds >= 0 && seconds < 59 ? () => handleTime(\"Add\", \"Second\") : handleTime()} \r\n                            className={timerOn === true ? Style.Hidden : seconds >= 0 && seconds < 59 ? Style.GreyBtn : \"\"} \r\n                            variant=\"outlined\" \r\n                            size=\"large\" \r\n                            fullWidth \r\n                            disabled={seconds >= 0 && seconds < 59 ? false : true} >\r\n                                <KeyboardArrowUpIcon />\r\n                        </Button>\r\n                    </span>\r\n                </Tooltip>\r\n                <Typography variant=\"h2\" color=\"primary\" align=\"center\">\r\n                    {seconds >= 0 && seconds < 10 ? String(`0${seconds}`) : seconds}\r\n                </Typography>\r\n                <Tooltip \r\n                    className={timerOn === true ? Style.Hidden :Style.Tooltip} \r\n                    title={seconds === 0 ? \"\" : keyPressed === \"Control\" ? \"Subtract 10 seconds\" :  \"Subtract 1 second\"} \r\n                    aria-label={keyPressed === \"Control\" ? \"Subtract 10 seconds\" :  \"Subtract 1 second\"} \r\n                    placement=\"bottom\">\r\n                    <span>\r\n                        <Button \r\n                            onClick={seconds === 0 ? handleTime() : () => handleTime(\"Subtract\", \"Second\")} \r\n                            className={timerOn === true ? Style.Hidden : seconds === 0 ? \"\" : Style.GreyBtn} \r\n                            variant=\"outlined\" size=\"large\" \r\n                            fullWidth \r\n                            disabled={seconds === 0 ? true : false} >\r\n                                <KeyboardArrowDownIcon />\r\n                        </Button>\r\n                    </span>\r\n                </Tooltip>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\n// Material UI Components\r\nimport { Zoom, Button } from '@material-ui/core';\r\n\r\n// Style sheet\r\nimport Style from './ButtonGroup.module.scss';\r\n\r\nexport function ButtonGroup({timerOn, seconds, minutes, hours, handleCancel, handleStop, handleStart}){\r\n    return(\r\n        <Zoom timeout={500} in>\r\n            <div className={Style.ButtonGroup}>\r\n                <Button \r\n                    onClick={handleCancel} \r\n                    className={`${Style.GreyBtn} ${Style.Left}`} \r\n                    variant=\"outlined\" \r\n                    size=\"large\" >\r\n                        Cancel\r\n                </Button>\r\n                {\r\n                    timerOn === true \r\n                        ? <Button \r\n                            onClick={handleStop} \r\n                            className={`${Style.RedBtn} ${Style.Right}`} \r\n                            variant=\"outlined\" \r\n                            size=\"large\" >\r\n                                Stop\r\n                        </Button>\r\n                        : <Button \r\n                            onClick={handleStart} \r\n                            className={seconds === 0 && minutes === 0 && hours === 0 ? `${Style.GreyBtn} ${Style.Right}` : `${Style.GreenBtn} ${Style.Right}`} \r\n                            variant=\"outlined\" \r\n                            size=\"large\" \r\n                            disabled={seconds === 0 && minutes === 0 && hours === 0 ? true : false}>\r\n                                Start\r\n                        </Button>\r\n                }\r\n            </div>\r\n        </Zoom>\r\n    );\r\n}","import React from 'react';\r\n\r\n// Material UI Components\r\nimport { Dialog, DialogTitle, List, ListItem, ListItemText } from '@material-ui/core';\r\n\r\n// Style sheet\r\nimport Style from './Dialog.module.scss';\r\n\r\nexport function DialogComponent({dialog, handleCloseDialog, handleRepeat}){\r\n    return(\r\n        <Dialog\r\n            open={dialog}\r\n            keepMounted\r\n            onClose={handleCloseDialog}\r\n            aria-labelledby=\"alertDialogTitle\"\r\n        >\r\n            <DialogTitle id=\"alertDialogTitle\">Timer Complete!</DialogTitle>\r\n            <List className={Style.List}>\r\n                <ListItem button onClick={handleCloseDialog}>\r\n                    <ListItemText className={`${Style.ListBtn} ${Style.RedBtn}`} align=\"center\" primary={\"Stop\"} />\r\n                </ListItem>\r\n                <ListItem button onClick={handleRepeat}>\r\n                    <ListItemText className={`${Style.ListBtn} ${Style.GreyBtn}`} align=\"center\" primary={\"Repeat\"} />\r\n                </ListItem>\r\n            </List>\r\n        </Dialog>\r\n    );\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Material UI Components\r\nimport { Fade } from '@material-ui/core';\r\n\r\n// Components\r\nimport {TabsComponent} from '../Tabs/Tabs';\r\nimport {Time} from './components/Time/Time';\r\nimport {ButtonGroup} from './components/ButtonGroup/ButtonGroup';\r\nimport {DialogComponent} from './components/Dialog/Dialog';\r\n\r\n// Style sheet\r\nimport Style from './Timer.module.scss';\r\n\r\n// Sound\r\nimport Sound from '../../sound/beep.wav';\r\n\r\nexport class Timer extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.interval = null;\r\n        this.state = {\r\n            timerOn: false,\r\n            seconds: 0,\r\n            minutes: 0,\r\n            hours: 0,\r\n            dialog: false,\r\n            timer: null,\r\n            keyPressed: null,\r\n        }\r\n    }\r\n\r\n    static propTypes = {\r\n        timerOn: PropTypes.bool,\r\n        seconds: PropTypes.number,\r\n        minutes: PropTypes.number,\r\n        hours: PropTypes.number,\r\n        dialog: PropTypes.bool,\r\n        timer: PropTypes.object,\r\n        keyPressed: PropTypes.string,\r\n    }\r\n\r\n    // This method will reset the state and will clear the interval once the user exits from the page\r\n    componentWillUnmount(){\r\n        this.handleCancel();\r\n\r\n        document.removeEventListener(\"keydown\", this.handleKeypressDown, false);\r\n        document.removeEventListener(\"keyup\", this.handleKeypressUp, false);\r\n    }\r\n\r\n    // This method will run each time the state is changed and it will check whether the timer is 0\r\n    componentDidUpdate(){\r\n        if(this.state.seconds === 0 && this.state.minutes === 0 && this.state.hours === 0 && this.state.timerOn === true){\r\n            clearInterval(this.interval);\r\n            this.setState({\r\n                timerOn: false,\r\n            })\r\n            this.handleFinished();\r\n        } \r\n\r\n        document.addEventListener(\"keydown\", this.handleKeypressDown, false);\r\n        document.addEventListener(\"keyup\", this.handleKeypressUp, false);\r\n    }\r\n\r\n    // This method will handle whenever the user presses a key on the keyboard and will execute the code on key down\r\n    handleKeypressDown = (event) => {\r\n        event.preventDefault();\r\n        if(this.state.keyPressed === event.key){\r\n            return\r\n        } else if(event.key === \"Enter\" && this.state.timerOn === false){\r\n            this.handleStart()\r\n        } else if(event.key === \"Escape\"){\r\n            this.handleCancel();\r\n        } else if(event.key === \" \" && this.state.timerOn === true){\r\n            this.handleStop();\r\n        } else{\r\n            this.setState({\r\n                keyPressed: event.key\r\n            })\r\n        }\r\n    } \r\n\r\n    // This method will handle whenever the user presses a key on the keyboard and will execute the code on key up\r\n    handleKeypressUp = (event) => {\r\n        event.preventDefault();\r\n        if(this.state.keyPressed === event.key){\r\n            this.setState({\r\n                keyPressed: null\r\n            })\r\n        }else{\r\n            return\r\n        }\r\n    } \r\n\r\n    // This method will update the timer depending on what button the users clicks on it will either decrease or increase the timer\r\n    handleTime = (type, clockType) => {\r\n        const currentKeyPressed = this.state.keyPressed;\r\n\r\n        let hours = this.state.hours;\r\n        let minutes = this.state.minutes;\r\n        let seconds = this.state.seconds;\r\n\r\n        if(type === \"Add\"){\r\n            switch(clockType){\r\n                case \"Hour\":\r\n                    if(currentKeyPressed === \"Control\"){\r\n                        hours = hours + 10;\r\n\r\n                        if(hours > 23){\r\n                            hours = 23;\r\n                        }\r\n                    }else{\r\n                        hours++;\r\n                    }\r\n                    this.setState({\r\n                        hours: hours,\r\n                    })\r\n                    break;\r\n                case \"Minute\":\r\n                    if(currentKeyPressed === \"Control\"){\r\n                        minutes = minutes + 10;\r\n\r\n                        if(minutes > 59){\r\n                            minutes = 59;\r\n                        }\r\n                    }else{\r\n                        minutes++;\r\n                    }\r\n                    this.setState({\r\n                        minutes: minutes,\r\n                    })\r\n                    break;\r\n                case \"Second\":\r\n                    if(currentKeyPressed === \"Control\"){\r\n                        seconds = seconds + 10;\r\n\r\n                        if(seconds > 59){\r\n                            seconds = 59;\r\n                        }\r\n                    }else{\r\n                        seconds++;\r\n                    }\r\n                    this.setState({\r\n                        seconds: seconds,\r\n                    })\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }else if(type === \"Subtract\"){\r\n            switch(clockType){\r\n                case \"Hour\":\r\n                    if(currentKeyPressed === \"Control\"){\r\n                        hours = hours - 10;\r\n\r\n                        if(hours < 0){\r\n                            hours = 0;\r\n                        }\r\n                    }else{\r\n                        hours--;\r\n                    }\r\n                    this.setState({\r\n                        hours: hours,\r\n                    })\r\n                    break;\r\n                case \"Minute\":\r\n                    if(currentKeyPressed === \"Control\"){\r\n                        minutes = minutes - 10;\r\n\r\n                        if(minutes < 0){\r\n                            minutes = 0;\r\n                        }\r\n                    }else{\r\n                        minutes--;\r\n                    }\r\n                    this.setState({\r\n                        minutes: minutes,\r\n                    })\r\n                    break;\r\n                case \"Second\":\r\n                    if(currentKeyPressed === \"Control\"){\r\n                        seconds = seconds - 10;\r\n\r\n                        if(seconds < 0){\r\n                            seconds = 0;\r\n                        }\r\n                    }else{\r\n                        seconds--;\r\n                    }\r\n                    this.setState({\r\n                        seconds: seconds,\r\n                    })\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    // This method will reset the timer\r\n    handleCancel = () => {\r\n        clearInterval(this.interval);\r\n        this.setState({\r\n            timerOn: false,\r\n            seconds: 0,\r\n            minutes: 0,\r\n            hours: 0,\r\n            dialog: false,\r\n            timer: null,\r\n        })\r\n    }\r\n\r\n    // This method will pause the timer\r\n    handleStop = () => {\r\n        clearInterval(this.interval);\r\n        this.setState(state => ({\r\n            timerOn: !state.timerOn,\r\n        }))\r\n    }\r\n\r\n    // This method will start the timer\r\n    handleStart = () => {\r\n        let seconds = this.state.seconds;\r\n        let minutes = this.state.minutes;\r\n        let hours= this.state.hours;\r\n\r\n        const newTimer = {\r\n            seconds: seconds,\r\n            minutes: minutes,\r\n            hours: hours,\r\n        }\r\n\r\n        this.setState({\r\n            timer: newTimer,\r\n        })\r\n\r\n        this.interval = setInterval(() => {\r\n            if(hours === 0 && minutes === 0 && seconds === 0){\r\n                seconds = 0;\r\n                minutes = 0;\r\n                hours = 0;\r\n            } else if(minutes !== 0 && seconds === 0){\r\n                seconds = 60;\r\n                minutes--;\r\n            } else if(hours !== 0 && minutes === 0 && seconds === 0){\r\n                seconds = 60;\r\n                minutes = 59;\r\n                hours--;\r\n            }\r\n            seconds--;\r\n\r\n            this.setState({\r\n                seconds: seconds,\r\n                minutes: minutes,\r\n                hours: hours,\r\n            })\r\n        }, 1000);\r\n\r\n        this.setState(state => ({\r\n            timerOn: !state.timerOn,\r\n        }))\r\n    }\r\n\r\n    // This method will open a popup to let the user either restart the timer or stop\r\n    handleFinished = () => {\r\n        this.audio = new Audio(Sound);\r\n        this.audio.play();\r\n        this.audio.loop = true;\r\n        this.setState(state => ({\r\n            dialog: !state.dialog \r\n        }))\r\n    }\r\n\r\n    // This method will close the popup\r\n    handleCloseDialog = () => {\r\n        this.audio.pause();\r\n        this.handleCancel();\r\n    }\r\n\r\n    // This method will restart the timer\r\n    handleRepeat = () => {\r\n        this.audio.pause();\r\n        const currentTimer = this.state.timer;\r\n\r\n        let seconds = currentTimer.seconds;\r\n        let minutes = currentTimer.minutes;\r\n        let hours= currentTimer.hours;\r\n\r\n        this.setState(state => ({\r\n            dialog: !state.dialog,\r\n            seconds: seconds,\r\n            minutes: minutes,\r\n            hours: hours,\r\n        }))\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <TabsComponent location={3} />\r\n                    <Fade timeout={500} in>\r\n                        <div className={Style.Container}>\r\n                            <Time \r\n                                timerOn={this.state.timerOn} \r\n                                seconds={this.state.seconds} \r\n                                minutes={this.state.minutes} \r\n                                hours={this.state.hours} \r\n                                keyPressed={this.state.keyPressed} \r\n                                handleTime={this.handleTime} />\r\n                            <ButtonGroup \r\n                                timerOn={this.state.timerOn} \r\n                                seconds={this.state.seconds} \r\n                                minutes={this.state.minutes} \r\n                                hours={this.state.hours} \r\n                                handleCancel={this.handleCancel} \r\n                                handleStop={this.handleStop} \r\n                                handleStart={this.handleStart} />\r\n                            <DialogComponent \r\n                                dialog={this.state.dialog} \r\n                                handleCloseDialog={this.handleCloseDialog} \r\n                                handleRepeat={this.handleRepeat} />\r\n                        </div>\r\n                    </Fade>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport {HashRouter as Router, Switch, Route} from \"react-router-dom\";\n\n// Components\nimport {Clock} from '../components/Clock/Clock';\nimport {Alarm} from '../components/Alarm/Alarm';\nimport {Stopwatch} from '../components/Stopwatch/Stopwatch';\nimport {Timer} from '../components/Timer/Timer';\n\n// Material UI Components\nimport { ThemeProvider, Container } from '@material-ui/core';\n\n// Style sheet\nimport Style from './App.module.scss';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#1565C0',\n    },\n  },\n});\n\nexport default function App(){\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <ThemeProvider theme={theme}>\n        <Router basename=\"/\">\n          <Container className={Style.Container} maxWidth=\"md\">\n            <Switch>\n              <Route path=\"/timer\">\n                <Timer />\n              </Route>\n              <Route path=\"/stopwatch\">\n                <Stopwatch />\n              </Route>\n              <Route path=\"/alarm\">\n                <Alarm />\n              </Route>\n              <Route exact path=\"/\">\n                <Clock />\n              </Route>\n            </Switch>\n          </Container>\n        </Router>\n      </ThemeProvider>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Components\nimport App from './container/App';\n\n// Style sheet\nimport './index.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Time\":\"Add_Time__Y91bT\",\"TimeGroup\":\"Add_TimeGroup__13Q1a\",\"Tooltip\":\"Add_Tooltip__elUwL\",\"Hidden\":\"Add_Hidden__3eG-M\",\"GreyBtn\":\"Add_GreyBtn__1P02c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Stopwatch_Container__xVrNA\",\"Time\":\"Stopwatch_Time__25Mxs\",\"ButtonGroup\":\"Stopwatch_ButtonGroup__1zcq1\",\"GreyBtn\":\"Stopwatch_GreyBtn__BudWx\",\"RedBtn\":\"Stopwatch_RedBtn__3DQLK\",\"GreenBtn\":\"Stopwatch_GreenBtn__23uxs\",\"List\":\"Stopwatch_List__3dwFp\",\"Fastest\":\"Stopwatch_Fastest__2R6Tw\",\"Slowest\":\"Stopwatch_Slowest__2Xyn2\",\"Normal\":\"Stopwatch_Normal__3ygJx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ButtonGroup\":\"ButtonGroup_ButtonGroup__1sXmz\",\"Right\":\"ButtonGroup_Right__1HHbp\",\"Left\":\"ButtonGroup_Left__1ni_e\",\"GreyBtn\":\"ButtonGroup_GreyBtn__1e27U\",\"RedBtn\":\"ButtonGroup_RedBtn__1YxrL\",\"GreenBtn\":\"ButtonGroup_GreenBtn__2z68G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Paper\":\"Paper_Paper__3uSrO\",\"BlackBtn\":\"Paper_BlackBtn__3Izje\",\"PrimaryBtn\":\"Paper_PrimaryBtn__v9e57\",\"RedBtn\":\"Paper_RedBtn__1QjmD\",\"Visible\":\"Paper_Visible__1VUij\",\"Hidden\":\"Paper_Hidden__1-ziH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"List_List__2XplQ\",\"Active\":\"List_Active__3dEud\",\"Inactive\":\"List_Inactive__2kX6x\",\"Center\":\"List_Center__PiL6K\",\"GreyBtn\":\"List_GreyBtn__3uvfz\",\"RedBtn\":\"List_RedBtn__3bW6v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GreyBtn\":\"Dialog_GreyBtn__3DSSg\",\"RedBtn\":\"Dialog_RedBtn__1v6Ka\",\"ListBtn\":\"Dialog_ListBtn__Bk8Cx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Content_Content__THCBT\",\"Title\":\"Content_Title__GQFr5\",\"Subtitle\":\"Content_Subtitle__37-AD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Paper\":\"Paper_Paper__20Npv\",\"BlackBtn\":\"Paper_BlackBtn__2ee6m\",\"RedBtn\":\"Paper_RedBtn__3OTNm\"};","module.exports = __webpack_public_path__ + \"static/media/beep.5a020f67.wav\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"List_List__3Ujiq\",\"GreyBtn\":\"List_GreyBtn__2V1XA\",\"RedBtn\":\"List_RedBtn__2S8-K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RedBtn\":\"Alarm_RedBtn__1XK4V\",\"ListBtn\":\"Alarm_ListBtn__2cg9f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GreyBtn\":\"Delete_GreyBtn__1VC7Y\",\"RedBtn\":\"Delete_RedBtn__jqODD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Clock_Container__2LBFa\",\"Toolbar\":\"Clock_Toolbar__1elEW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GreyBtn\":\"Delete_GreyBtn__2oE-Y\",\"RedBtn\":\"Delete_RedBtn__25i1R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GreyBtn\":\"Add_GreyBtn__RAitS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Alarm_Container__1_ZKF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Timer_Container__8RNv6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"App_Container__20Z0I\"};"],"sourceRoot":""}