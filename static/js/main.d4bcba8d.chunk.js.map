{"version":3,"sources":["components/Timer/components/Time/Time.module.scss","components/Tabs/Tabs.js","components/Clock/components/Content/Content.js","components/Clock/components/Paper/Paper.js","components/Clock/components/Dialog/layouts/Add/Add.js","components/Clock/components/Dialog/layouts/List/List.js","components/Clock/components/Dialog/layouts/Delete/Delete.js","components/Clock/components/Dialog/Dialog.js","components/Clock/Clock.js","components/Alarm/components/List/List.js","components/Alarm/components/Paper/Paper.js","components/Alarm/components/Dialog/layouts/Add/Add.js","components/Alarm/components/Dialog/layouts/Delete/Delete.js","components/Alarm/components/Dialog/layouts/Alarm/Alarm.js","components/Alarm/components/Dialog/Dialog.js","components/Alarm/Alarm.js","components/Stopwatch/Stopwatch.js","components/Timer/components/Time/Time.js","components/Timer/components/ButtonGroup/ButtonGroup.js","components/Timer/components/Dialog/Dialog.js","components/Timer/Timer.js","container/App.js","index.js","components/Alarm/components/Dialog/layouts/Add/Add.module.scss","components/Stopwatch/Stopwatch.module.scss","components/Timer/components/ButtonGroup/ButtonGroup.module.scss","components/Alarm/components/List/List.module.scss","components/Timer/components/Dialog/Dialog.module.scss","components/Clock/components/Content/Content.module.scss","components/Clock/components/Paper/Paper.module.scss","components/Alarm/components/Paper/Paper.module.scss","sound/beep.wav","components/Alarm/components/Dialog/layouts/Alarm/Alarm.module.scss","components/Clock/components/Dialog/layouts/List/List.module.scss","components/Clock/components/Dialog/layouts/Delete/Delete.module.scss","components/Alarm/components/Dialog/layouts/Delete/Delete.module.scss","components/Clock/components/Dialog/layouts/Add/Add.module.scss","components/Clock/Clock.module.scss","components/Alarm/Alarm.module.scss","components/Timer/Timer.module.scss","container/App.module.scss"],"names":["module","exports","TabsComponent","location","Paper","elevation","variant","Tabs","value","indicatorColor","textColor","centered","Tab","exact","to","label","component","Link","Content","locationPicked","local","undefined","calcTime","timezone","type","time","Date","setSeconds","locationDate","dateObject","hours","getUTCHours","minutes","getUTCMinutes","day","getDay","dayText","date","getDate","month","getMonth","monthText","year","getFullYear","timeOfDay","className","Style","Typography","Subtitle","align","name","sys","country","Title","color","PaperComponent","handleDialogOpen","Zoom","timeout","in","Tooltip","title","aria-label","placement","Button","onClick","BlackBtn","size","RedBtn","disabled","Add","selectedLocation","selectedLocationError","handleDialogClose","handleKeyPress","onChange","handleSubmit","Fragment","DialogContent","TextField","error","placeholder","fullWidth","onKeyPress","DialogActions","disableSpacing","GreyBtn","ListComponent","locations","handleOpenLocationData","handleClearLocations","hour","minute","List","map","ListItem","key","Math","random","button","ListItemText","primary","secondary","Delete","handleDelete","DialogContentText","id","DialogComponent","dialog","dialogType","Dialog","open","keepMounted","onClose","aria-labelledby","maxWidth","DialogTitle","Clock","props","createLocal","removeZero","toString","split","splice","filter","num","parseInt","join","handleLocationChange","event","setState","target","handleFocus","state","fetch","then","response","json","data","newLocation","handleUpdate","catch","Error","newLocations","currentCities","cities","cod","find","number","toLowerCase","push","localStorage","setItem","JSON","stringify","removeItem","componentDidMount","itemId","itemName","newlocations","item","newCities","clearInterval","this","interval","setLocations","parse","getItem","setCities","length","setInterval","Fade","Container","React","Component","alarms","edit","handleAlarmEdit","handleAlarmDelete","handleSwitchChange","Center","alarm","divider","children","active","Active","Inactive","String","ListItemSecondaryAction","edge","IconButton","Switch","checked","handleEdit","PrimaryBtn","alarmPicked","handleTime","onChangeTextfield","handleSave","handleSaveEdit","Time","TimeGroup","Box","mt","m","Alarm","handleStop","ListBtn","handleAlarmComplete","getHours","getMinutes","forEach","playSound","audio","play","loop","handleChangeTextfield","newAlarmLabel","newAlarms","updateAlarm","clockType","newAlarmHours","newAlarmMinutes","newAlarm","pause","Audio","Sound","setAlarms","Stopwatch","handleLap","newLaps","laps","newLap","index","seconds","unshift","calculateQuickest","currentLap","lastLap","currentQuickestSeconds","quickest","currentSlowestSeconds","slowest","currentPreviousLapSeconds","calculateCurrentLap","quickestSeconds","handleUpdateStopwatch","lap","stopwatchOn","handleReset","handleStart","ButtonGroup","GreenBtn","Normal","Fastest","Slowest","timerOn","Hidden","handleCancel","Left","Right","handleCloseDialog","handleRepeat","Timer","timer","newTimer","handleFinished","currentTimer","theme","createMuiTheme","palette","main","ReactDOM","render","CssBaseline","ThemeProvider","path","document","getElementById"],"mappings":"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","file":"static/js/main.d4bcba8d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Time\":\"Time_Time__2gqof\",\"TimeGroup\":\"Time_TimeGroup__2RK2P\",\"Tooltip\":\"Time_Tooltip__13bcG\",\"Hidden\":\"Time_Hidden__1CRj5\",\"GreyBtn\":\"Time_GreyBtn__MX43G\"};","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n// Material UI Components\r\nimport { Paper, Tabs, Tab, } from '@material-ui/core';\r\n\r\n// Components\r\n\r\n// Style sheet\r\n\r\nexport function TabsComponent({location}){\r\n    return(\r\n      <Paper elevation={3} variant=\"outlined\">\r\n        <Tabs\r\n          value={location}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          centered\r\n        >\r\n          <Tab exact=\"true\" to=\"/\" label=\"Clock\" component={Link} />\r\n          <Tab to=\"/alarm\" label=\"Alarm\" component={Link} />\r\n          <Tab to=\"/stopwatch\" label=\"Stopwatch\" component={Link} />\r\n          <Tab to=\"/timer\" label=\"Timer\" component={Link} />\r\n        </Tabs>\r\n      </Paper>\r\n    );\r\n}","import React from 'react';\r\n\r\n// Material UI Components\r\nimport { Typography } from '@material-ui/core';\r\n\r\n// Style sheet\r\nimport Style from './Content.module.scss';\r\n\r\nexport function Content({ locationPicked, local}){\r\n    const location = (locationPicked === undefined || locationPicked === null) ? local : locationPicked;\r\n\r\n    // Function to calculate the local time of the location\r\n    function calcTime(timezone, type){\r\n        const date = new Date();\r\n        const time = date.setSeconds(timezone)\r\n        const locationDate = new Date(time);\r\n\r\n        const dateObject = {\r\n            hours: locationDate.getUTCHours(),\r\n            minutes: locationDate.getUTCMinutes(),\r\n            day: locationDate.getDay(),\r\n            dayText: \"\",\r\n            date: locationDate.getDate(),\r\n            month: locationDate.getMonth(),\r\n            monthText: \"\",\r\n            year: locationDate.getFullYear(),\r\n            timeOfDay: \"\",\r\n        }\r\n\r\n        switch(dateObject.day){\r\n            case 0:\r\n                dateObject.dayText = \"Sunday\";\r\n                break;\r\n            case 1:\r\n                dateObject.dayText = \"Monday\";\r\n                break;\r\n            case 2:\r\n                dateObject.dayText = \"Tuesday\";\r\n                break;\r\n            case 3:\r\n                dateObject.dayText = \"Wednesday\";\r\n                break;\r\n            case 4:\r\n                dateObject.dayText = \"Thursday\";\r\n                break;\r\n            case 5:\r\n                dateObject.dayText = \"Friday\";\r\n                break;\r\n            case 6:\r\n                dateObject.dayText = \"Saturday\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        \r\n        switch(dateObject.month){\r\n            case 0:\r\n                dateObject.monthText = \"January\";\r\n                break;\r\n            case 1:\r\n                dateObject.monthText = \"February\";\r\n                break;\r\n            case 2:\r\n                dateObject.monthText = \"March\";\r\n                break;\r\n            case 3:\r\n                dateObject.monthText = \"April\";\r\n                break;\r\n            case 4:\r\n                dateObject.monthText = \"May\";\r\n                break;\r\n            case 5:\r\n                dateObject.monthText = \"June\";\r\n                break;\r\n            case 6:\r\n                dateObject.monthText = \"July\";\r\n                break;\r\n            case 7:\r\n                dateObject.monthText = \"August\";\r\n                break;\r\n            case 8:\r\n                dateObject.monthText = \"September\";\r\n                break;\r\n            case 9:\r\n                dateObject.monthText = \"October\";\r\n                break;\r\n            case 10:\r\n                dateObject.monthText = \"November\";\r\n                break;\r\n            case 11:\r\n                dateObject.monthText = \"December\";\r\n                break;\r\n            default:\r\n                break;\r\n        } \r\n\r\n        \r\n        if(dateObject.minutes >= 0 && dateObject.minutes < 10){\r\n            dateObject.minutes = `0${dateObject.minutes}`\r\n        }\r\n\r\n        if(dateObject.hours >= 0 && dateObject.hours < 10){\r\n            dateObject.hours = `0${dateObject.hours}`\r\n        }\r\n\r\n        if(dateObject.hours >= 0 && dateObject.hours < 12){\r\n            dateObject.timeOfDay = \"AM\";\r\n        } else{\r\n\r\n            switch(dateObject.hours){\r\n                case 13:\r\n                    dateObject.hours = 1;\r\n                    break;\r\n                case 14:\r\n                    dateObject.hours= 2;\r\n                    break;\r\n                case 15:\r\n                    dateObject.hours= 3;\r\n                    break;\r\n                case 16:\r\n                    dateObject.hours= 4;\r\n                    break;\r\n                case 17:\r\n                    dateObject.hours= 5;\r\n                    break;\r\n                case 18:\r\n                    dateObject.hours= 6;\r\n                    break;\r\n                case 19:\r\n                    dateObject.hours= 7;\r\n                    break;\r\n                case 20:\r\n                    dateObject.hours= 8;\r\n                    break;\r\n                case 21:\r\n                    dateObject.hours= 9;\r\n                    break;\r\n                case 22:\r\n                    dateObject.hours= 10;\r\n                    break;\r\n                case 23:\r\n                    dateObject.hours= 11;\r\n                    break;\r\n                default:\r\n                    break;\r\n            } \r\n\r\n            dateObject.timeOfDay = \"PM\";\r\n        }\r\n        \r\n        if(type === \"time\"){\r\n            return `${dateObject.hours}:${dateObject.minutes}`\r\n        }else if(type === \"timeOfDay\"){\r\n            return dateObject.timeOfDay\r\n        } else if(type === \"date\"){\r\n            return `${dateObject.dayText}, ${dateObject.monthText} ${dateObject.date}, ${dateObject.year}`\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className={Style.Content}>\r\n            <Typography className={Style.Subtitle} variant=\"button\" align=\"center\">{location.name === \"Local\" ? location.name : `${location.name} (${location.sys.country})`}</Typography>\r\n            <Typography className={Style.Title} variant=\"h1\" color=\"primary\" align=\"center\">\r\n                {calcTime(location.timezone, \"time\")}\r\n                <span><Typography variant=\"button\" color=\"primary\" align=\"center\">{calcTime(location.timezone, \"timeOfDay\")}</Typography></span>\r\n            </Typography>\r\n            <Typography className={Style.Subtitle} variant=\"button\" align=\"center\">{calcTime(location.timezone, \"date\")}</Typography>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\n// Material UI Components\r\nimport { Zoom, Paper, Tooltip, Button } from '@material-ui/core';\r\n\r\n// Style sheet\r\nimport Style from './Paper.module.scss';\r\n\r\n// Icons\r\nimport ViewListIcon from '@material-ui/icons/ViewList';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nexport function PaperComponent({ locationPicked, handleDialogOpen}){\r\n    const location = (locationPicked === null) ? {name: \"Local\"} : locationPicked;\r\n\r\n    return(\r\n        <Zoom timeout={500} in>\r\n            <Paper className={Style.Paper} variant=\"outlined\" >\r\n                <Tooltip title=\"View Locations\" aria-label=\"View Locations\" placement=\"top\">\r\n                    <Button aria-label=\"View Locations\" onClick={() => handleDialogOpen(\"Loc\")} className={Style.BlackBtn} size=\"large\"><ViewListIcon /></Button>\r\n                </Tooltip> \r\n                <div>\r\n                    <Tooltip title={location.name === \"Local\" ? \"\" : \"Delete Location\"} aria-label=\"Delete Locations\" placement=\"top\">\r\n                        <span>\r\n                            <Button \r\n                                aria-label=\"Delete Locations\"\r\n                                className={location.name === \"Local\" ? \"\" : Style.RedBtn}\r\n                                onClick={() => handleDialogOpen(\"Del\")} \r\n                                size=\"large\" \r\n                                disabled={location.name === \"Local\" ? true : false}><DeleteForeverIcon /></Button>\r\n                        </span>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"Add Locations\" aria-label=\"Add Locations\" placement=\"top\">\r\n                        <Button aria-label=\"Add Locations\" onClick={() => handleDialogOpen(\"Add\")} className={Style.BlackBtn} size=\"large\"><AddIcon /></Button>\r\n                    </Tooltip>\r\n                </div>\r\n            </Paper>\r\n        </Zoom>\r\n    );\r\n}","import React from 'react';\r\n\r\n// Material UI Components\r\nimport {DialogContent, TextField, DialogActions, Button } from '@material-ui/core';\r\n\r\n// Style sheet\r\nimport Style from './Add.module.scss';\r\n\r\nexport function Add({selectedLocation, selectedLocationError, handleDialogClose, handleKeyPress, onChange, handleSubmit}){\r\n    return(\r\n        <React.Fragment>\r\n            <DialogContent>\r\n                <TextField\r\n                    error={selectedLocationError}\r\n                    label=\"City\"\r\n                    placeholder='Try \"London\"'\r\n                    type=\"string\"\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    value={selectedLocation}\r\n                    onChange={onChange}\r\n                    onKeyPress={handleKeyPress}\r\n                />\r\n            </DialogContent>\r\n            <DialogActions disableSpacing>\r\n                <Button className={Style.GreyBtn} onClick={handleDialogClose}>Cancel</Button>\r\n                <Button onClick={handleSubmit} color=\"primary\">Submit</Button>\r\n            </DialogActions>\r\n        </React.Fragment>\r\n    );\r\n}","import React from 'react';\r\n\r\n// Material UI Components\r\nimport {List, ListItem, ListItemText, DialogActions, Button} from '@material-ui/core';\r\n\r\n// Style sheet\r\nimport Style from './List.module.scss';\r\n\r\nexport function ListComponent({locations, handleOpenLocationData, handleDialogClose, handleClearLocations }){\r\n\r\n    // Function to calculate the local time of the location\r\n    function calcTime(timezone){\r\n        const date = new Date();\r\n        const time = date.setSeconds(timezone)\r\n        const locationDate = new Date(time);\r\n\r\n        const dateObject = {\r\n            hour: locationDate.getUTCHours(),\r\n            minute: locationDate.getUTCMinutes(),\r\n        } \r\n\r\n        if(dateObject.minute >= 0 && dateObject.minute < 10){\r\n            dateObject.minute = `0${dateObject.minute}`\r\n        }\r\n\r\n        if(dateObject.hour >= 0 && dateObject.hour < 10){\r\n            dateObject.hour = `0${dateObject.hour}`\r\n        }\r\n        \r\n        return `${dateObject.hour}:${dateObject.minute}`\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <List>\r\n                {\r\n                    locations.map(location => {\r\n                        return(\r\n                            <ListItem key={Math.random()} button onClick={() => handleOpenLocationData(location)}>\r\n                                <ListItemText align=\"left\" primary={location.name === \"Local\" ? location.name : `${location.name} (${location.sys.country})`} />\r\n                                <ListItemText align=\"right\" secondary={calcTime(location.timezone)} />\r\n                            </ListItem>\r\n                        );\r\n                    })        \r\n                }\r\n            </List>\r\n            <DialogActions disableSpacing>\r\n                <Button className={Style.GreyBtn} onClick={handleDialogClose}>Cancel</Button>\r\n                <Button className={Style.RedBtn} onClick={handleClearLocations} color=\"primary\">Clear</Button>\r\n            </DialogActions>\r\n        </React.Fragment>\r\n    );\r\n}","import React from 'react';\r\n\r\n// Material UI Components\r\nimport {DialogContent, DialogContentText, DialogActions, Button } from '@material-ui/core';\r\n\r\n// Style sheet\r\nimport Style from './Delete.module.scss';\r\n\r\nexport function Delete({locationPicked, handleDialogClose, handleDelete}){\r\n    return(\r\n        <React.Fragment>\r\n            <DialogContent>\r\n                <DialogContentText>Are you sure you want to delete {locationPicked.name}</DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions disableSpacing>\r\n                <Button className={Style.GreyBtn} onClick={handleDialogClose}>No</Button>\r\n                <Button className={Style.RedBtn} onClick={() => handleDelete(locationPicked.id, locationPicked.name)}>Yes</Button>\r\n            </DialogActions>\r\n        </React.Fragment>\r\n    );\r\n}","import React from 'react';\r\n\r\n// Material UI Components\r\nimport { Dialog, DialogTitle } from '@material-ui/core';\r\n\r\n// Layouts\r\nimport {Add} from './layouts/Add/Add';\r\nimport {ListComponent} from './layouts/List/List';\r\nimport {Delete} from './layouts/Delete/Delete';\r\n\r\nexport function DialogComponent({dialog, dialogType, selectedLocation, selectedLocationError, locations, locationPicked, handleOpenLocationData, handleDialogClose, handleClearLocations, handleKeyPress, onChange, handleDelete, handleSubmit}){\r\n    return(\r\n        <Dialog\r\n            open={dialog}\r\n            keepMounted\r\n            onClose={handleDialogClose}\r\n            aria-labelledby=\"alertDialogTitle\"\r\n            fullWidth={true}\r\n            maxWidth=\"xs\"\r\n        >\r\n            <DialogTitle id=\"alertDialogTitle\">\r\n                {\r\n                    dialogType === \"Add\" ? \"Add new location\" : dialogType === \"Del\" ? \"Delete?\" : \"Locations\"\r\n                }\r\n            </DialogTitle>\r\n\r\n            {\r\n                dialogType === \"Add\" \r\n                ? <Add \r\n                    selectedLocation={selectedLocation} \r\n                    selectedLocationError={selectedLocationError} \r\n                    handleDialogClose={handleDialogClose}\r\n                    handleKeyPress={handleKeyPress}\r\n                    onChange={onChange}\r\n                    handleSubmit={handleSubmit} /> \r\n                : dialogType === \"Del\" \r\n                ? <Delete \r\n                    locationPicked={locationPicked} \r\n                    handleDialogClose={handleDialogClose}\r\n                    handleDelete={handleDelete} /> \r\n                : <ListComponent \r\n                    locations={locations}\r\n                    handleOpenLocationData={handleOpenLocationData}\r\n                    handleDialogClose={handleDialogClose} \r\n                    handleClearLocations={handleClearLocations} />\r\n            }\r\n            \r\n        </Dialog>\r\n    );\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Material UI Components\r\nimport { Fade } from '@material-ui/core';\r\n\r\n// Components\r\nimport {TabsComponent} from '../Tabs/Tabs';\r\nimport {Content} from './components/Content/Content';\r\nimport {PaperComponent} from './components/Paper/Paper';\r\nimport {DialogComponent} from './components/Dialog/Dialog';\r\n\r\n// Style sheet\r\nimport Style from './Clock.module.scss';\r\n\r\nexport class Clock extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            selectedLocation: \"\",\r\n            selectedLocationError: false,\r\n            newLocation: null,\r\n            locations: [],\r\n            cities: [],\r\n            locationPicked: null,\r\n            dialog: false,\r\n            dialogType: \"\",\r\n        }\r\n    }\r\n\r\n    static propTypes = {\r\n        selectedLocation: PropTypes.string,\r\n        selectedLocationError: PropTypes.bool,\r\n        newLocation: PropTypes.object,\r\n        locations: PropTypes.object,\r\n        cities: PropTypes.object,\r\n        locationPicked: PropTypes.object,\r\n        dialog: PropTypes.bool,\r\n        dialogType: PropTypes.string,\r\n    }\r\n\r\n    // This method will create the local time object\r\n    createLocal = () => {\r\n        const date = new Date();\r\n        \r\n        const dataString = date.toString();\r\n        const dataArray = dataString.split(\"\");\r\n\r\n        const offset = dataArray.splice(29, 4); \r\n        // const operator = dataArray[28]\r\n        const removeZero = offset.filter(num => num !== \"0\");\r\n        const gmt = parseInt(removeZero.join(\"\"));\r\n        const converGmtToSeconds = gmt * 60 * 60;\r\n        // const joinOffset = String(operator + converGmtToSeconds)\r\n\r\n        const local = {\r\n            name: \"Local\",\r\n            timezone: converGmtToSeconds,\r\n            sys: {\r\n                country: \"Country\"\r\n            }\r\n        }\r\n\r\n        return local\r\n    }\r\n\r\n    // This method will clear the interval once the user exits from the page\r\n    componentWillUnmount(){\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    componentDidMount(){ \r\n        clearInterval(this.interval);\r\n\r\n        // Will set a variables with the value of the local storage \r\n        const setLocations = JSON.parse(localStorage.getItem(\"LocalLocations\") || \"[]\");\r\n        const setCities = JSON.parse(localStorage.getItem(\"LocalCities\") || \"[]\");\r\n\r\n        // Will check whether setLocations, setCities is empty or setLocations has atleast 1 location \r\n        if(setLocations.length === 0 || setCities.length === 0 || setLocations.length === 1){\r\n            const newLocations = [];\r\n            const local = this.createLocal()\r\n\r\n            newLocations.push(local);\r\n\r\n            this.setState({\r\n                locations: newLocations,\r\n                locationPicked: local,\r\n            })\r\n            return\r\n        // If not empty, will update the locations with the current data \r\n        } else{\r\n            this.setState({\r\n                locations: setLocations,\r\n                cities: setCities,\r\n            })\r\n        }\r\n\r\n        this.interval = setInterval(() => {\r\n            this.setState({\r\n                locations: this.state.locations,\r\n            })\r\n        }, 1000);\r\n    }\r\n\r\n    // This method will change the selectedLocation to whatever the user inputs\r\n    handleLocationChange = (event) => {\r\n        this.setState({\r\n            selectedLocation: event.target.value,\r\n        })\r\n    }\r\n\r\n    // This method will handle the text field when the user clicks on it and will set the selectedLocation to empty\r\n    handleFocus = () => {\r\n        if(this.state.selectedLocationError === true || this.state.selectedLocation === \"Correct Input\"){\r\n            this.setState(state => ({\r\n                selectedLocation: \"\",\r\n                selectedLocationError: !state.selectedLocationError,\r\n            }))\r\n        }\r\n    }\r\n\r\n    // This method will handle the key that the user presses\r\n    handleKeyPress = (event) => {\r\n        this.handleFocus(); \r\n        if(this.state.dialog === true){\r\n            if(event.key === 'Enter'){\r\n                this.handleSubmit(); \r\n            } else if(event.key === 'Escape'){\r\n                this.handleDialogClose()\r\n            }\r\n        }\r\n    }\r\n\r\n    // This method will fetch the api with the location that the user chooses\r\n    handleSubmit = () => {\r\n        const location = this.state.selectedLocation;\r\n        const key = \"f3ef21c55d165f4433893081d602af6e\";\r\n    \r\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${location}&APPID=${key}`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          this.setState({\r\n            newLocation: data,\r\n          })\r\n          this.handleUpdate();\r\n        })\r\n        .catch(Error);\r\n    }\r\n\r\n    // This method will validate the users input and will either add the location or displays and error\r\n    handleUpdate = () => {\r\n        const errors = [\"400\", \"401\", \"403\", \"404\", \"405\", \"409\", \"500\", \"503\"];\r\n    \r\n        // Getting current state of locations list\r\n        const newLocations = [...this.state.locations];\r\n    \r\n        // Getting current state of cities list & current input by user\r\n        const currentCities = [...this.state.cities];\r\n        \r\n        // Checking if an error has occurred to display the incorrect message\r\n        if(this.state.newLocation.cod === errors.find(number => number === this.state.newLocation.cod)){\r\n          this.setState(state => ({\r\n            selectedLocation: \"Incorrect Input\",\r\n            selectedLocationError: !state.selectedLocationError,\r\n            newLocation: null,\r\n          }))\r\n          return\r\n        }else if(this.state.newLocation.name.toLowerCase() === this.state.cities.find(name => name === this.state.newLocation.name.toLowerCase())){\r\n          this.setState(state => ({\r\n            selectedLocation: \"City already inserted\",\r\n            selectedLocationError: !state.selectedLocationError,\r\n            newLocation: null,\r\n          }))\r\n          return\r\n        }else{\r\n            // Adding the new location selected in to the locations Array\r\n            newLocations.push(this.state.newLocation);\r\n            \r\n            // Adding the input from the user to the new cities list\r\n            currentCities.push(this.state.selectedLocation.toLowerCase());\r\n\r\n            // Setting the Locations array into our local storage\r\n            localStorage.setItem(\"LocalLocations\", JSON.stringify(newLocations));\r\n\r\n            // Setting the Cities array into our local storage\r\n            localStorage.setItem(\"LocalCities\", JSON.stringify(currentCities));\r\n            \r\n            // Setting the locations array with the new locations array & the cities array with the new cities array\r\n            this.setState({\r\n                selectedLocation: \"Correct Input\",\r\n                newLocation: null,\r\n                locations: newLocations,\r\n                cities: currentCities,\r\n            })\r\n        }\r\n    }\r\n\r\n    // This method will display the data from the location that the user chooses\r\n    handleOpenLocationData = (location) => {\r\n        this.setState({\r\n            locationPicked: location\r\n        })\r\n        this.handleDialogClose();\r\n    }\r\n\r\n    // This method will clear the state and the local storage\r\n    handleClearLocations = () => {\r\n        // Removing the Locations & Cities arrays from the local storage\r\n        localStorage.removeItem(\"LocalLocations\");\r\n        localStorage.removeItem(\"LocalCities\");\r\n\r\n        this.setState({\r\n            selectedLocation: \"\",\r\n            selectedLocationError: false,\r\n            newLocation: null,\r\n            locations: [],\r\n            cities: [],\r\n        })\r\n\r\n        this.componentDidMount()\r\n    }\r\n\r\n    // This method will delete the location from the state\r\n    handleDelete = (id, name) => {\r\n        const itemId = id;\r\n        const itemName = name.toLowerCase();\r\n\r\n        // Getting the current state of locations array\r\n        const currentlocations = [...this.state.locations];\r\n\r\n        // Remove the item from the new locations array\r\n        const newlocations = currentlocations.filter(item => {\r\n            return item.id !== itemId\r\n        });\r\n\r\n        // Getting the current state of cities array\r\n        const currentCities = [...this.state.cities];\r\n        \r\n        // Remove the item from the new cities array\r\n        const newCities = currentCities.filter(item => {\r\n        return item !== itemName\r\n        });\r\n\r\n        // Setting the Locations array into our local storage\r\n        localStorage.setItem(\"LocalLocations\", JSON.stringify(newlocations));\r\n\r\n        // Setting the Cities array into our local storage\r\n        localStorage.setItem(\"LocalCities\", JSON.stringify(newCities));\r\n\r\n        this.setState({\r\n            locationPicked: this.state.locations[0],\r\n            locations: newlocations,\r\n            cities: newCities,\r\n        })\r\n\r\n        this.componentDidMount();\r\n        this.handleDialogClose();\r\n    }\r\n\r\n    // This method will open the popup\r\n    handleDialogOpen = (dialogType) => {\r\n        this.setState(state => ({\r\n            dialog: !state.dialog,\r\n            dialogType: dialogType,\r\n        }))\r\n    }\r\n\r\n    // This method will close the popup\r\n    handleDialogClose = () => {\r\n        this.setState(state => ({\r\n            dialog: !state.dialog,\r\n        }))\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <TabsComponent location={0} />\r\n                <Fade timeout={500} in>\r\n                    <div className={Style.Container}>\r\n                        <Content local={this.createLocal()} locationPicked={this.state.locationPicked} />\r\n                        <PaperComponent locationPicked={this.state.locationPicked} handleDialogOpen={this.handleDialogOpen} />\r\n                    </div>\r\n                </Fade>\r\n                <DialogComponent \r\n                        dialog={this.state.dialog} \r\n                        dialogType={this.state.dialogType} \r\n                        selectedLocation={this.state.selectedLocation} \r\n                        selectedLocationError={this.state.selectedLocationError} \r\n                        locations={this.state.locations} \r\n                        locationPicked={this.state.locationPicked} \r\n                        handleOpenLocationData={this.handleOpenLocationData}\r\n                        handleClearLocations={this.handleClearLocations}\r\n                        handleDialogClose={this.handleDialogClose}\r\n                        handleKeyPress={this.handleKeyPress}\r\n                        onChange={this.handleLocationChange}\r\n                        handleSubmit={this.handleSubmit} \r\n                        handleDelete={this.handleDelete} />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\n// Material UI Components\r\nimport { List, ListItem, ListItemText, Typography, ListItemSecondaryAction, IconButton, Switch } from '@material-ui/core';\r\n\r\n// Style sheet\r\nimport Style from './List.module.scss';\r\n\r\n// Icons\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\nexport function ListComponent({ alarms, edit, handleAlarmEdit, handleAlarmDelete, handleSwitchChange }){\r\n    return(\r\n        <List className={Style.List}>\r\n            {\r\n                alarms.length === 0 \r\n                \r\n                ? <ListItem className={Style.Center}>\r\n                    <ListItemText\r\n                        primary=\"No alarms found. Please add alarm.\"\r\n                    />\r\n                </ListItem>\r\n                :\r\n                alarms.map(alarm => {\r\n                    return(\r\n                        <ListItem key={alarm.id} divider>\r\n                            <ListItemText\r\n                                children={<Typography className={alarm.active === true ? Style.Active : Style.Inactive} variant=\"h4\">{`${alarm.hours >= 0 && alarm.hours < 10 ? String(`0${alarm.hours}`) : alarm.hours}:${alarm.minutes >= 0 && alarm.minutes < 10 ? String(`0${alarm.minutes}`) : alarm.minutes}`}</Typography>}\r\n                                secondary={alarm.label}\r\n                            />\r\n                            <ListItemSecondaryAction edge=\"end\">\r\n                                {\r\n                                    edit === true \r\n                                        ? <React.Fragment>\r\n                                            <IconButton onClick={() => handleAlarmEdit(alarm)} className={Style.GreyBtn} aria-label={`Edit ${alarm.label} alarm`}><EditIcon /></IconButton>\r\n                                            <IconButton onClick={() => handleAlarmDelete(alarm)} className={Style.RedBtn} aria-label={`Delete ${alarm.label} alarm`}><DeleteForeverIcon /></IconButton>\r\n                                        </React.Fragment> \r\n                                        : <Switch size=\"medium\" color=\"primary\" onChange={() => handleSwitchChange(alarm)} checked={alarm.active === true ? true : false} />\r\n                                }\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                    );\r\n                })\r\n            }\r\n        </List>\r\n    );\r\n}","import React from 'react';\r\n\r\n// Material UI Components\r\nimport { Zoom, Paper, Tooltip, Button } from '@material-ui/core';\r\n\r\n// Style sheet\r\nimport Style from './Paper.module.scss';\r\n\r\n// Icons\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nexport function PaperComponent({ alarms, edit, handleDialogOpen, handleEdit }){\r\n    return(\r\n        <Zoom timeout={500} in>\r\n            <Paper className={Style.Paper} variant=\"outlined\" >\r\n                <Tooltip title={ alarms.length === 0 ? \"\" : \"View Locations\"} aria-label=\"View Locations\" placement=\"top\">\r\n                    <span>\r\n                        <Button aria-label=\"View Locations\" onClick={handleEdit} className={alarms.length === 0 ? \"\" : edit === true ? Style.PrimaryBtn : Style.BlackBtn} size=\"large\" disabled={alarms.length === 0 ? true : false}>Edit</Button>\r\n                    </span>\r\n                </Tooltip> \r\n                <Tooltip title=\"Add Alarm\" aria-label=\"Add Alarm\" placement=\"top\">\r\n                    <Button aria-label=\"Add Alarm\" onClick={() => handleDialogOpen(\"Add\")} className={Style.BlackBtn} size=\"large\"><AddIcon /></Button>\r\n                </Tooltip>\r\n            </Paper>\r\n        </Zoom>\r\n    );\r\n}","import React from 'react';\r\n\r\n// Material UI Components\r\nimport { Typography, Tooltip,  DialogContent, TextField, Box, DialogActions, Button } from '@material-ui/core';\r\n\r\n// Style sheet\r\nimport Style from './Add.module.scss';\r\n\r\n// Icons\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\n\r\nexport function Add({alarmPicked, hours, minutes, handleTime, onChangeTextfield, handleDialogClose, handleSave, handleSaveEdit}){\r\n    return(\r\n        <React.Fragment>\r\n            <DialogContent>\r\n                <div className={Style.Time}>\r\n                    <div className={Style.TimeGroup}>\r\n                        <Typography variant=\"overline\" align=\"center\">Hours</Typography>\r\n                        <Tooltip \r\n                            className={Style.Tooltip} \r\n                            title={hours === 23 ? \"\" : \"Add 1 hour\"} \r\n                            aria-label=\"Add 1 hour\" \r\n                            placement=\"top\">\r\n                            <span>\r\n                                <Button \r\n                                    onClick={hours >= 0 && hours < 23 ? () => handleTime(\"Add\", \"Hour\") : handleTime()} \r\n                                    className={hours >= 0 && hours < 23 ? Style.GreyBtn : \"\"} \r\n                                    variant=\"outlined\" \r\n                                    size=\"medium\" \r\n                                    fullWidth \r\n                                    disabled={hours >= 0 && hours < 23 ? false : true} >\r\n                                        <KeyboardArrowUpIcon/>\r\n                                </Button>\r\n                            </span>\r\n                        </Tooltip>\r\n                        <Typography variant=\"h3\" color=\"primary\" align=\"center\">\r\n                            {hours >= 0 && hours < 10 ? String(`0${hours}`) : hours}\r\n                        </Typography>\r\n                        <Tooltip className={Style.Tooltip} title={hours === 0 ? \"\" : \"Subtract 1 hour\"} aria-label=\"Subtract 1 hour\" placement=\"bottom\">\r\n                            <span>\r\n                                <Button \r\n                                    onClick={hours === 0 ? handleTime() : () => handleTime(\"Subtract\", \"Hour\")} \r\n                                    className={hours === 0 ? \"\" : Style.GreyBtn} \r\n                                    variant=\"outlined\" \r\n                                    size=\"medium\" \r\n                                    fullWidth \r\n                                    disabled={hours === 0 ? true : false} >\r\n                                        <KeyboardArrowDownIcon />\r\n                                </Button>\r\n                            </span>\r\n                        </Tooltip>\r\n                    </div>\r\n                    <Box mt={3}>\r\n                        <Typography variant=\"h3\" color=\"primary\" align=\"center\">:</Typography>\r\n                    </Box>\r\n                    <div className={Style.TimeGroup}>\r\n                        <Typography variant=\"overline\" align=\"center\">Minutes</Typography>\r\n                        <Tooltip className={Style.Tooltip} title={minutes === 59 ? \"\" : \"Add 1 minute\"} aria-label=\"Add 1 minute\" placement=\"top\">\r\n                            <span>\r\n                                <Button \r\n                                    onClick={minutes >= 0 && minutes < 59 ? () => handleTime(\"Add\", \"Minute\") : handleTime()} \r\n                                    className={minutes >= 0 && minutes < 59 ? Style.GreyBtn : \"\"} \r\n                                    variant=\"outlined\" \r\n                                    size=\"medium\" \r\n                                    fullWidth \r\n                                    disabled={minutes >= 0 && minutes < 59 ? false : true} >\r\n                                        <KeyboardArrowUpIcon />\r\n                                </Button>\r\n                            </span>\r\n                        </Tooltip>\r\n                        <Typography variant=\"h3\" color=\"primary\" align=\"center\">\r\n                            {minutes >= 0 && minutes < 10 ? String(`0${minutes}`) : minutes}\r\n                        </Typography>\r\n                        <Tooltip className={Style.Tooltip} title={minutes === 0 ? \"\" : \"Subtract 1 minute\"} aria-label=\"Subtract 1 minute\" placement=\"bottom\">\r\n                            <span>\r\n                                <Button \r\n                                    onClick={minutes === 0 ? handleTime() : () => handleTime(\"Subtract\", \"Minute\")} \r\n                                    className={minutes === 0 ? \"\" : Style.GreyBtn} \r\n                                    variant=\"outlined\" \r\n                                    size=\"medium\" \r\n                                    fullWidth \r\n                                    disabled={minutes === 0 ? true : false} >\r\n                                        <KeyboardArrowDownIcon />\r\n                                </Button>\r\n                            </span>\r\n                        </Tooltip>\r\n                    </div>\r\n                </div>\r\n                <Box m={3} />\r\n                <TextField\r\n                    label=\"Label\"\r\n                    placeholder={alarmPicked === null ? 'Try \"Work\"' : alarmPicked.label}\r\n                    type=\"string\"\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    onChange={onChangeTextfield}\r\n                />\r\n\r\n            </DialogContent>\r\n            <DialogActions disableSpacing>\r\n                <Button className={Style.GreyBtn} onClick={handleDialogClose}>Cancel</Button>\r\n                <Button onClick={alarmPicked === null ? handleSave : () => handleSaveEdit(alarmPicked)} color=\"primary\">Save</Button>\r\n            </DialogActions>\r\n        </React.Fragment>\r\n    );\r\n}","import React from 'react';\r\n\r\n// Material UI Components\r\nimport {DialogContent, DialogContentText, DialogActions, Button } from '@material-ui/core';\r\n\r\n// Style sheet\r\nimport Style from './Delete.module.scss';\r\n\r\nexport function Delete({alarmPicked, handleDialogClose, handleDelete}){\r\n    return(\r\n        <React.Fragment>\r\n            <DialogContent>\r\n                <DialogContentText>Are you sure you want to delete {alarmPicked.label}</DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions disableSpacing>\r\n                <Button className={Style.GreyBtn} onClick={handleDialogClose}>No</Button>\r\n                <Button className={Style.RedBtn} onClick={() => handleDelete(alarmPicked.id)}>Yes</Button>\r\n            </DialogActions>\r\n        </React.Fragment>\r\n    );\r\n}","import React from 'react';\r\n\r\n// Material UI Components\r\nimport { List, ListItem, ListItemText } from '@material-ui/core';\r\n\r\n// Style sheet\r\nimport Style from './Alarm.module.scss';\r\n\r\nexport function Alarm({alarmPicked, handleStop}){\r\n    return(\r\n        <List className={Style.List}>\r\n            <ListItem button onClick={() => handleStop(alarmPicked)}>\r\n                <ListItemText className={`${Style.ListBtn} ${Style.RedBtn}`} align=\"center\" primary={\"Stop\"} />\r\n            </ListItem>\r\n        </List>\r\n    );\r\n}","import React from 'react';\r\n\r\n// Material UI Components\r\nimport { Dialog, DialogTitle } from '@material-ui/core';\r\n\r\n// Layouts\r\nimport {Add} from './layouts/Add/Add';\r\nimport {Delete} from './layouts/Delete/Delete';\r\nimport {Alarm} from './layouts/Alarm/Alarm';\r\n\r\nexport function DialogComponent({alarmPicked, dialog, dialogType, hours, minutes, handleTime, onChangeTextfield, handleSave, handleDialogClose, handleDelete, handleSaveEdit, handleStop}){\r\n    return(\r\n        <Dialog\r\n            open={dialog}\r\n            keepMounted\r\n            onClose={handleDialogClose}\r\n            aria-labelledby=\"alertDialogTitle\"\r\n            fullWidth={true}\r\n            maxWidth=\"xs\"\r\n        >\r\n            <DialogTitle id=\"alertDialogTitle\">\r\n                {\r\n                    dialogType === \"Add\" ? \"Add new Alarm\" : dialogType === \"Del\" ? \"Delete?\" : dialogType === \"Edit\" ? \"Edit Alarm\" : `${alarmPicked === null ? \"Alarm\" : alarmPicked.label} Complete!` \r\n                } \r\n            </DialogTitle>\r\n            {\r\n                dialogType === \"Add\" \r\n                ? <Add \r\n                    alarmPicked={alarmPicked}\r\n                    hours={hours} \r\n                    minutes={minutes} \r\n                    handleTime={handleTime}\r\n                    onChangeTextfield={onChangeTextfield}\r\n                    handleDialogClose={handleDialogClose}\r\n                    handleSave={handleSave} />\r\n                : dialogType === \"Del\" \r\n                ? <Delete \r\n                    alarmPicked={alarmPicked}\r\n                    handleDialogClose={handleDialogClose}\r\n                    handleDelete={handleDelete} />\r\n                : dialogType === \"Edit\" \r\n                ? <Add \r\n                    alarmPicked={alarmPicked}\r\n                    hours={hours} \r\n                    minutes={minutes} \r\n                    handleTime={handleTime}\r\n                    onChangeTextfield={onChangeTextfield}\r\n                    handleDialogClose={handleDialogClose}\r\n                    handleSaveEdit={handleSaveEdit} />\r\n                : <Alarm \r\n                    alarmPicked={alarmPicked}\r\n                    handleStop={handleStop} />\r\n            }\r\n        </Dialog>\r\n    );\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Material UI Components\r\nimport { Fade} from '@material-ui/core';\r\n\r\n// Components\r\nimport {TabsComponent} from '../Tabs/Tabs';\r\nimport {ListComponent} from './components/List/List';\r\nimport {PaperComponent} from './components/Paper/Paper';\r\nimport {DialogComponent} from './components/Dialog/Dialog';\r\n\r\n// Style sheet\r\nimport Style from './Alarm.module.scss';\r\n\r\n// Sound\r\nimport Sound from '../../sound/beep.wav';\r\n\r\nexport class Alarm extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            alarms: [],\r\n            alarmPicked: null,\r\n            edit: false, \r\n            newAlarmHours: 0,\r\n            newAlarmMinutes: 0,\r\n            newAlarmLabel: \"\",\r\n            dialog: false,\r\n            dialogType: \"\",\r\n        }\r\n    }\r\n\r\n    static propTypes = {\r\n        alarms: PropTypes.array,\r\n        alarmPicked: PropTypes.object,\r\n        edit: PropTypes.bool,\r\n        newAlarmHours: PropTypes.number,\r\n        newAlarmMinutes: PropTypes.number,\r\n        newAlarmLabel: PropTypes.string,\r\n        dialog: PropTypes.bool,\r\n        dialogType: PropTypes.string,\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    componentDidMount(){ \r\n        clearInterval(this.interval);\r\n\r\n        this.audio = new Audio(Sound);\r\n\r\n        // Will set a variables with the value of the local storage \r\n        const setAlarms = JSON.parse(localStorage.getItem(\"Alarms\") || \"[]\");\r\n\r\n        this.handleAlarmComplete(setAlarms);\r\n\r\n        if(this.state.dialog === false){\r\n            this.audio.pause();\r\n        }\r\n\r\n        this.setState({\r\n            alarms: setAlarms,\r\n        })\r\n    }\r\n\r\n    // This method will check every second if the current time is equal to the time of the alarm if so it will open the finish dialog\r\n    handleAlarmComplete = (alarms) => {\r\n        this.interval = setInterval(() => {\r\n            const date = new Date();\r\n            const hours = date.getHours();\r\n            const minutes = date.getMinutes();\r\n    \r\n            const active = alarms.filter(alarm => alarm.active === true)\r\n\r\n            active.forEach(item => {\r\n                if(item.hours === hours && item.minutes === minutes){\r\n                    this.playSound();\r\n                    this.handleDialogOpen(\"Finish\", item);\r\n                }\r\n            })\r\n        }, 1000);\r\n    }\r\n    \r\n    // This method will play the sound\r\n    playSound = () => {\r\n        clearInterval(this.interval);\r\n        this.audio.play();\r\n        this.audio.loop = true;\r\n    }\r\n\r\n    // This method will change the newAlarmLabel to whatever the user inputs\r\n    handleChangeTextfield = (event) => {\r\n        this.setState({\r\n            newAlarmLabel: event.target.value,\r\n        })\r\n    }\r\n\r\n    // This method will open the edit popup\r\n    handleAlarmEdit = (alarm) => {\r\n        this.setState({\r\n            alarmPicked: alarm,\r\n        })\r\n\r\n        this.handleDialogOpen(\"Edit\", alarm);\r\n    }\r\n\r\n    // This method will open the delete popup\r\n    handleAlarmDelete = (alarm) => {\r\n        this.setState({\r\n            alarmPicked: alarm,\r\n        })\r\n\r\n        this.handleDialogOpen(\"Del\");\r\n    }\r\n\r\n    // This method will update the switch to either be active true or false\r\n    handleSwitchChange = (alarm) => {\r\n        const newAlarms = [...this.state.alarms];\r\n\r\n        // Create new array from newAlarms array with the element that has the same id and will update the active attribute\r\n        const updateAlarm = newAlarms.filter(item => {\r\n            if(item.id === alarm.id){\r\n                item.active = !item.active\r\n            }\r\n            return item\r\n        });\r\n\r\n        // Will update the item with the updated data\r\n        newAlarms.forEach(item => {\r\n            if(item.id === updateAlarm.id){\r\n                item = updateAlarm\r\n            }\r\n        });\r\n\r\n        // Setting the Alarms array into our local storage\r\n        localStorage.setItem(\"Alarms\", JSON.stringify(newAlarms));\r\n\r\n        this.setState({\r\n            alarms: newAlarms\r\n        })\r\n    }\r\n\r\n    // This method will update the timer depending on what button the users clicks on it will either decrease or increase the timer\r\n    handleTime = (type, clockType) => {\r\n        let hours = this.state.newAlarmHours;\r\n        let minutes = this.state.newAlarmMinutes;\r\n\r\n        if(type === \"Add\"){\r\n            switch(clockType){\r\n                case \"Hour\":\r\n                    hours++;\r\n                    this.setState(state => ({\r\n                        newAlarmHours: hours,\r\n                    }))\r\n                    break;\r\n                case \"Minute\":\r\n                    minutes++;\r\n                    this.setState(state => ({\r\n                        newAlarmMinutes: minutes,\r\n                    }))\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }else if(type === \"Subtract\"){\r\n            switch(clockType){\r\n                case \"Hour\":\r\n                    hours--;\r\n                    this.setState(state => ({\r\n                        newAlarmHours: hours,\r\n                    }))\r\n                    break;\r\n                case \"Minute\":\r\n                    minutes--;\r\n                    this.setState(state => ({\r\n                        newAlarmMinutes: minutes,\r\n                    }))\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    // This method will save a new alarm into the alarm array\r\n    handleSave = () => {\r\n        const hours = this.state.newAlarmHours;\r\n        const minutes = this.state.newAlarmMinutes;\r\n        const label = (this.state.newAlarmLabel === \"\") ? \"Label\" : this.state.newAlarmLabel;\r\n\r\n        // Getting the current state of alarms array\r\n        const newAlarms = [...this.state.alarms];\r\n        \r\n        // Creating new alarm\r\n        const newAlarm = {\r\n            id: Math.random(),\r\n            label: label,\r\n            hours: hours,\r\n            minutes: minutes,\r\n            active: true\r\n        }\r\n\r\n        // Putting the new alarm into the newAlarms array\r\n        newAlarms.push(newAlarm);\r\n\r\n        // Setting the Alarms array into our local storage\r\n        localStorage.setItem(\"Alarms\", JSON.stringify(newAlarms));\r\n\r\n        this.setState({\r\n            alarms: newAlarms,\r\n            newAlarmHours: 0,\r\n            newAlarmMinutes: 0,\r\n            newAlarmLabel: \"\",\r\n        })\r\n\r\n        this.handleDialogClose();\r\n    }\r\n\r\n    // This method will update the state with new values that the user chooses\r\n    handleSaveEdit = (alarm) => {\r\n        const hours = this.state.newAlarmHours;\r\n        const minutes = this.state.newAlarmMinutes;\r\n        const label = this.state.newAlarmLabel;\r\n\r\n        // Getting the current state of alarms array\r\n        const newAlarms = [...this.state.alarms];\r\n\r\n        // Create new array from newAlarms array with the element that has the same id and will update its data\r\n        const updateAlarm = newAlarms.filter(item => {\r\n            if(item.id === alarm.id){\r\n                item.hours = hours;\r\n                item.minutes = minutes;\r\n                item.label = label;\r\n            }\r\n            return item\r\n        });\r\n        \r\n        // Will update the item with the updated data\r\n        newAlarms.forEach(item => {\r\n            if(item.id === updateAlarm.id){\r\n                item = updateAlarm\r\n            }\r\n        });\r\n\r\n        // Setting the Alarms array into our local storage\r\n        localStorage.setItem(\"Alarms\", JSON.stringify(newAlarms));\r\n        \r\n        this.setState(state => ({\r\n            alarms: newAlarms,\r\n            newAlarmHours: 0,\r\n            newAlarmMinutes: 0,\r\n            newAlarmLabel: \"\",\r\n            edit: !state.edit, \r\n        }))\r\n        \r\n        this.handleDialogClose();\r\n    }\r\n\r\n    // This method will change the edit state \r\n    handleEdit = () => {\r\n        this.setState(state => ({\r\n            edit: !state.edit,\r\n        }))\r\n    }\r\n\r\n    // This method will delete the location from the state\r\n    handleDelete = (id) => {\r\n        const itemId = id;\r\n\r\n        // Getting the current state of alarms array\r\n        const currentAlarms = [...this.state.alarms];\r\n\r\n        // Remove the item from the new alarms array\r\n        const newAlarms = currentAlarms.filter(item => {\r\n            return item.id !== itemId\r\n        });\r\n\r\n        // Setting the Alarms array into our local storage\r\n        localStorage.setItem(\"Alarms\", JSON.stringify(newAlarms));\r\n\r\n        this.setState({\r\n            alarms: newAlarms,\r\n        })\r\n\r\n        this.handleDialogClose();\r\n    }\r\n\r\n    // This method will stop the alarm once it has been completed and the user clicks on the stop button\r\n    handleStop = (alarm) => {\r\n        this.audio.pause();\r\n\r\n        // Get current state of alarms array\r\n        const newAlarms = [...this.state.alarms];\r\n\r\n        // Create new array from newAlarms array with the element that has the same id\r\n        const updateAlarm = newAlarms.filter(item => {\r\n            if(item.id === alarm.id){\r\n                item.active = !item.active\r\n            }\r\n            return item\r\n        });\r\n\r\n        // Will update the item with the updated data\r\n        newAlarms.forEach(item => {\r\n            if(item.id === updateAlarm.id){\r\n                item = updateAlarm\r\n            }\r\n        });\r\n\r\n        // Setting the Alarms array into our local storage\r\n        localStorage.setItem(\"Alarms\", JSON.stringify(newAlarms));\r\n\r\n        this.setState({\r\n            alarms: newAlarms\r\n        })\r\n\r\n        this.handleDialogClose();\r\n    }\r\n\r\n    // This method will open the popup\r\n    handleDialogOpen = (dialogType, alarmPicked) => {\r\n        this.setState(state => ({\r\n            dialog: !state.dialog,\r\n            dialogType: dialogType,\r\n        }))\r\n\r\n        if(dialogType === \"Finish\"){\r\n            this.setState({\r\n                alarmPicked: alarmPicked\r\n            })\r\n        }\r\n\r\n        if(dialogType === \"Edit\"){\r\n            this.setState({\r\n                newAlarmHours: alarmPicked.hours,\r\n                newAlarmMinutes: alarmPicked.minutes,\r\n                newAlarmLabel: alarmPicked.label,\r\n            })\r\n        }\r\n    }\r\n\r\n    // This method will close the popup\r\n    handleDialogClose = () => {\r\n        this.setState(state => ({\r\n            alarmPicked: null,\r\n            dialog: !state.dialog,\r\n            dialogType: \"\",\r\n        }))\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <TabsComponent location={1} />\r\n                <Fade timeout={500} in>\r\n                    <div className={Style.Container}>\r\n                        <ListComponent \r\n                            alarms={this.state.alarms} \r\n                            edit={this.state.edit} \r\n                            handleAlarmEdit={this.handleAlarmEdit} \r\n                            handleAlarmDelete={this.handleAlarmDelete} \r\n                            handleSwitchChange={this.handleSwitchChange} />\r\n                        <PaperComponent \r\n                            alarms={this.state.alarms} \r\n                            edit={this.state.edit} \r\n                            handleEdit={this.handleEdit} \r\n                            handleDialogOpen={this.handleDialogOpen} />\r\n                    </div>\r\n                </Fade>\r\n                <DialogComponent \r\n                    alarmPicked={this.state.alarmPicked}\r\n                    dialog={this.state.dialog} \r\n                    dialogType={this.state.dialogType} \r\n                    hours={this.state.newAlarmHours} \r\n                    minutes={this.state.newAlarmMinutes} \r\n                    onChangeTextfield={this.handleChangeTextfield} \r\n                    handleTime={this.handleTime} \r\n                    handleDialogClose={this.handleDialogClose} \r\n                    handleSave={this.handleSave} \r\n                    handleSaveEdit={this.handleSaveEdit} \r\n                    handleStop={this.handleStop}\r\n                    handleDelete={this.handleDelete} />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Material UI Components\r\nimport { Typography, Zoom, Button, List, ListItem, ListItemText, Fade } from '@material-ui/core';\r\n\r\n// Components\r\nimport {TabsComponent} from '../Tabs/Tabs';\r\n\r\n// Style sheet\r\nimport Style from './Stopwatch.module.scss';\r\n\r\nexport class Stopwatch extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            stopwatchOn: false,\r\n            seconds: 0,\r\n            minutes: 0,\r\n            laps: [],\r\n            quickest: null,\r\n            quickestSeconds: null,\r\n            slowest: null,\r\n        }\r\n    }\r\n\r\n    static propTypes = {\r\n        stopwatchOn: PropTypes.bool,\r\n        seconds: PropTypes.number,\r\n        minutes: PropTypes.number,\r\n        laps: PropTypes.bool,\r\n        quickest: PropTypes.object,\r\n        quickestSeconds: PropTypes.number,\r\n        slowest: PropTypes.object,\r\n    }\r\n\r\n    // This method will reset the state and will clear the interval once the user exits from the page\r\n    componentWillUnmount(){\r\n        this.handleReset();\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    // This method will create a new lap and store it in the laps array\r\n    handleLap = () => {\r\n        const newLaps = [...this.state.laps];\r\n\r\n        const newLap = {\r\n            id: Math.random(),\r\n            index: newLaps.length + 1,\r\n            seconds: this.state.seconds,\r\n            minutes: this.state.minutes,\r\n        }\r\n\r\n        newLaps.unshift(newLap);\r\n\r\n        this.setState({\r\n            laps: newLaps,\r\n        })\r\n\r\n        this.calculateQuickest(newLap, newLaps)\r\n    }\r\n\r\n    // This method will check if the new time that is lapped is the quickest or the slowest time\r\n    calculateQuickest = (currentLap, laps) => {\r\n        if(laps.length > 1){\r\n            let lastLap = laps[1];\r\n\r\n            const currentQuickestSeconds = (this.state.quickest.minutes > 0 ? this.state.quickest.minutes * 60 : 0) + this.state.quickest.seconds;\r\n            const currentSlowestSeconds = (this.state.slowest.minutes > 0 ? this.state.slowest.minutes * 60 : 0) + this.state.slowest.seconds;\r\n            const currentPreviousLapSeconds = (lastLap.minutes > 0 ? lastLap.minutes * 60 : 0) + lastLap.seconds;\r\n            const currentLapSeconds = (currentLap.minutes > 0 ? currentLap.minutes * 60 : 0) + currentLap.seconds;\r\n\r\n            const calculateCurrentLap = currentLapSeconds - currentPreviousLapSeconds;\r\n\r\n            const quickestSeconds = (this.state.quickestSeconds === null) ? currentQuickestSeconds : this.state.quickestSeconds;\r\n\r\n            if(calculateCurrentLap < quickestSeconds){\r\n                this.setState({\r\n                    quickest: currentLap,\r\n                    quickestSeconds: calculateCurrentLap\r\n                })\r\n                return\r\n            } else if(calculateCurrentLap > currentSlowestSeconds){\r\n                this.setState({\r\n                    slowest: currentLap\r\n                })\r\n                return\r\n            }else{\r\n                return\r\n            }\r\n        } else{\r\n            this.setState({\r\n                quickest: currentLap,\r\n                slowest: currentLap\r\n            })\r\n            return\r\n        }\r\n    }\r\n\r\n    // This method will update the Laps Array and the stopwatch to the data from the lap that the user chooses. Then it will call the handleStop method. \r\n    handleUpdateStopwatch = (index) => {\r\n        const currentLaps = [...this.state.laps];\r\n\r\n        const newLaps = currentLaps.filter(lap => lap.index <= index);\r\n\r\n        const lap = newLaps[0];\r\n\r\n        const quickest = (newLaps.find(lap => lap.id === this.state.quickest.id) === true) ? this.state.quickest : newLaps[newLaps.length - 1];\r\n        const slowest = (newLaps.find(lap => lap.id === this.state.slowest.id) === true) ? this.state.slowest : newLaps[newLaps.length - 1];\r\n\r\n        this.setState(state => ({\r\n            stopwatchOn: (state.stopwatchOn === false) ? false : !state.stopwatchOn,\r\n            seconds: lap.seconds,\r\n            minutes: lap.minutes,\r\n            laps: newLaps,\r\n            quickest: quickest,\r\n            quickestSeconds: null,\r\n            slowest: slowest,\r\n        }))\r\n        \r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    // This method will reset the stopwatch\r\n    handleReset = () => {\r\n        this.setState({\r\n            stopwatchOn: false,\r\n            seconds: 0,\r\n            minutes: 0,\r\n            laps: [],\r\n            quickest: null,\r\n            slowest: null,\r\n        })\r\n    }\r\n\r\n    // This method will pause the stopwatch\r\n    handleStop = () => {\r\n        clearInterval(this.interval);\r\n        this.setState(state => ({\r\n            stopwatchOn: !state.stopwatchOn,\r\n        }))\r\n    }\r\n\r\n    // This method will start the stopwatch\r\n    handleStart = () => {\r\n        let seconds = this.state.seconds;\r\n        let minutes = this.state.minutes;\r\n\r\n        this.interval = setInterval(() => {\r\n            seconds++;\r\n            if(seconds >= 60){\r\n                seconds = 0\r\n                minutes++;\r\n            }\r\n            this.setState({\r\n                seconds: seconds,\r\n                minutes: minutes,\r\n            })\r\n        }, 1000);\r\n\r\n        this.setState(state => ({\r\n            stopwatchOn: !state.stopwatchOn,\r\n        }))\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <TabsComponent location={2} />\r\n                <Fade timeout={500} in>\r\n                    <div className={Style.Container}>\r\n                        <div className={Style.Time}>\r\n                            <Typography variant=\"h1\" color=\"primary\" align=\"center\">\r\n                                {this.state.minutes >= 0 && this.state.minutes < 10 ? String(`0${this.state.minutes}`) : this.state.minutes}\r\n                            </Typography>\r\n                            <Typography variant=\"h2\" color=\"primary\" align=\"center\">:</Typography>\r\n                            <Typography variant=\"h1\" color=\"primary\" align=\"center\">\r\n                                {this.state.seconds >= 0 && this.state.seconds < 10 ? String(`0${this.state.seconds}`) : this.state.seconds}\r\n                            </Typography>\r\n                        </div>\r\n                        <Zoom timeout={500} in>\r\n                            <div className={Style.ButtonGroup}>\r\n                                {\r\n                                    this.state.stopwatchOn === true \r\n                                        ? <Button onClick={this.handleLap} className={Style.GreyBtn} variant=\"outlined\" size=\"large\" >Lap</Button>\r\n                                            : <Button onClick={this.handleReset} className={Style.GreyBtn} variant=\"outlined\" size=\"large\" >Reset</Button>\r\n                                }\r\n                                {\r\n                                    this.state.stopwatchOn === true \r\n                                        ? <Button onClick={this.handleStop} className={Style.RedBtn} variant=\"outlined\" size=\"large\" >Stop</Button>\r\n                                            : <Button onClick={this.handleStart} className={Style.GreenBtn} variant=\"outlined\" size=\"large\" >Start</Button>\r\n                                }\r\n                            </div>\r\n                        </Zoom>\r\n                        <List className={Style.List}>\r\n                            {\r\n                                this.state.laps.map(lap => {\r\n                                    return(\r\n                                        <ListItem key={lap.id} button divider onClick={() => this.handleUpdateStopwatch(lap.index)}>\r\n                                            <ListItemText align=\"left\" secondary={`Lap ${lap.index}`} />\r\n                                            {/* <div style={{flex: \"1\"}} /> */}\r\n                                            <ListItemText \r\n                                                align=\"right\" \r\n                                                primary={`${lap.minutes >= 0 && lap.minutes < 10 ? String(`0${lap.minutes}`) : lap.minutes}:${lap.seconds >= 0 && lap.seconds < 10 ? String(`0${lap.seconds}`) : lap.seconds}`} \r\n                                                className={lap.id === this.state.quickest.id && lap.id === this.state.slowest.id ? Style.Normal : lap.id === this.state.quickest.id ? Style.Fastest \r\n                                                                : lap.id === this.state.slowest.id  ? Style.Slowest : Style.Normal}\r\n                                            />\r\n                                        </ListItem>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </List>\r\n                    </div>\r\n                </Fade>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\n// Material UI Components\r\nimport { Typography, Tooltip, Button, Box,} from '@material-ui/core';\r\n\r\n// Style sheet\r\nimport Style from './Time.module.scss';\r\n\r\n// Icons\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\n\r\nexport function Time({timerOn, seconds, minutes, hours, handleTime}){\r\n    return(\r\n        <div className={Style.Time}>\r\n            <div className={Style.TimeGroup}>\r\n                <Typography variant=\"overline\" align=\"center\">Hours</Typography>\r\n                <Tooltip \r\n                    className={Style.Tooltip} \r\n                    title={hours === 23 ? \"\" : \"Add 1 hour\"} \r\n                    aria-label=\"Add 1 hour\" \r\n                    placement=\"top\">\r\n                    <span>\r\n                        <Button \r\n                            onClick={hours >= 0 && hours < 23 ? () => handleTime(\"Add\", \"Hour\") : handleTime()} \r\n                            className={timerOn === true ? Style.Hidden : hours >= 0 && hours < 23 ? Style.GreyBtn : \"\"} \r\n                            variant=\"outlined\" \r\n                            size=\"large\" \r\n                            fullWidth \r\n                            disabled={hours >= 0 && hours < 23 ? false : true} >\r\n                                <KeyboardArrowUpIcon/>\r\n                        </Button>\r\n                    </span>\r\n                </Tooltip>\r\n                <Typography variant=\"h2\" color=\"primary\" align=\"center\">\r\n                    {hours >= 0 && hours < 10 ? String(`0${hours}`) : hours}\r\n                </Typography>\r\n                <Tooltip className={Style.Tooltip} title={hours === 0 ? \"\" : \"Subtract 1 hour\"} aria-label=\"Subtract 1 hour\" placement=\"bottom\">\r\n                    <span>\r\n                        <Button \r\n                            onClick={hours === 0 ? handleTime() : () => handleTime(\"Subtract\", \"Hour\")} \r\n                            className={timerOn === true ? Style.Hidden : hours === 0 ? \"\" : Style.GreyBtn} \r\n                            variant=\"outlined\" \r\n                            size=\"large\" \r\n                            fullWidth \r\n                            disabled={hours === 0 ? true : false} >\r\n                                <KeyboardArrowDownIcon />\r\n                        </Button>\r\n                    </span>\r\n                </Tooltip>\r\n            </div>\r\n            <Box mt={3}>\r\n                <Typography variant=\"h2\" color=\"primary\" align=\"center\">:</Typography>\r\n            </Box>\r\n            <div className={Style.TimeGroup}>\r\n                <Typography variant=\"overline\" align=\"center\">Minutes</Typography>\r\n                <Tooltip className={Style.Tooltip} title={minutes === 59 ? \"\" : \"Add 1 minute\"} aria-label=\"Add 1 minute\" placement=\"top\">\r\n                    <span>\r\n                        <Button \r\n                            onClick={minutes >= 0 && minutes < 59 ? () => handleTime(\"Add\", \"Minute\") : handleTime()} \r\n                            className={timerOn === true ? Style.Hidden : minutes >= 0 && minutes < 59 ? Style.GreyBtn : \"\"} \r\n                            variant=\"outlined\" \r\n                            size=\"large\" \r\n                            fullWidth \r\n                            disabled={minutes >= 0 && minutes < 59 ? false : true} >\r\n                                <KeyboardArrowUpIcon />\r\n                        </Button>\r\n                    </span>\r\n                </Tooltip>\r\n                <Typography variant=\"h2\" color=\"primary\" align=\"center\">\r\n                    {minutes >= 0 && minutes < 10 ? String(`0${minutes}`) : minutes}\r\n                </Typography>\r\n                <Tooltip className={Style.Tooltip} title={minutes === 0 ? \"\" : \"Subtract 1 minute\"} aria-label=\"Subtract 1 minute\" placement=\"bottom\">\r\n                    <span>\r\n                        <Button \r\n                            onClick={minutes === 0 ? handleTime() : () => handleTime(\"Subtract\", \"Minute\")} \r\n                            className={timerOn === true ? Style.Hidden : minutes === 0 ? \"\" : Style.GreyBtn} \r\n                            variant=\"outlined\" \r\n                            size=\"large\" \r\n                            fullWidth \r\n                            disabled={minutes === 0 ? true : false} >\r\n                                <KeyboardArrowDownIcon />\r\n                        </Button>\r\n                    </span>\r\n                </Tooltip>\r\n            </div>\r\n            <Box mt={3}>\r\n                <Typography variant=\"h2\" color=\"primary\" align=\"center\">:</Typography>\r\n            </Box>\r\n            <div className={Style.TimeGroup}>\r\n                <Typography variant=\"overline\" align=\"center\">Seconds</Typography>\r\n                <Tooltip className={Style.Tooltip} title={seconds === 59 ? \"\" : \"Add 1 second\"} aria-label=\"Add 1 second\" placement=\"top\">\r\n                    <span>\r\n                        <Button \r\n                            onClick={seconds >= 0 && seconds < 59 ? () => handleTime(\"Add\", \"Second\") : handleTime()} \r\n                            className={timerOn === true ? Style.Hidden : seconds >= 0 && seconds < 59 ? Style.GreyBtn : \"\"} \r\n                            variant=\"outlined\" \r\n                            size=\"large\" \r\n                            fullWidth \r\n                            disabled={seconds >= 0 && seconds < 59 ? false : true} >\r\n                                <KeyboardArrowUpIcon />\r\n                        </Button>\r\n                    </span>\r\n                </Tooltip>\r\n                <Typography variant=\"h2\" color=\"primary\" align=\"center\">\r\n                    {seconds >= 0 && seconds < 10 ? String(`0${seconds}`) : seconds}\r\n                </Typography>\r\n                <Tooltip className={Style.Tooltip} title={seconds === 0 ? \"\" : \"Subtract 1 second\"} aria-label=\"Subtract 1 second\" placement=\"bottom\">\r\n                    <span>\r\n                        <Button \r\n                            onClick={seconds === 0 ? handleTime() : () => handleTime(\"Subtract\", \"Second\")} \r\n                            className={timerOn === true ? Style.Hidden : seconds === 0 ? \"\" : Style.GreyBtn} \r\n                            variant=\"outlined\" size=\"large\" \r\n                            fullWidth \r\n                            disabled={seconds === 0 ? true : false} >\r\n                                <KeyboardArrowDownIcon />\r\n                        </Button>\r\n                    </span>\r\n                </Tooltip>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\n// Material UI Components\r\nimport { Zoom, Button } from '@material-ui/core';\r\n\r\n// Style sheet\r\nimport Style from './ButtonGroup.module.scss';\r\n\r\nexport function ButtonGroup({timerOn, seconds, minutes, hours, handleCancel, handleStop, handleStart}){\r\n    return(\r\n        <Zoom timeout={500} in>\r\n            <div className={Style.ButtonGroup}>\r\n                <Button \r\n                    onClick={handleCancel} \r\n                    className={`${Style.GreyBtn} ${Style.Left}`} \r\n                    variant=\"outlined\" \r\n                    size=\"large\" >\r\n                        Cancel\r\n                </Button>\r\n                {\r\n                    timerOn === true \r\n                        ? <Button \r\n                            onClick={handleStop} \r\n                            className={`${Style.RedBtn} ${Style.Right}`} \r\n                            variant=\"outlined\" \r\n                            size=\"large\" >\r\n                                Stop\r\n                        </Button>\r\n                        : <Button \r\n                            onClick={handleStart} \r\n                            className={seconds === 0 && minutes === 0 && hours === 0 ? `${Style.GreyBtn} ${Style.Right}` : `${Style.GreenBtn} ${Style.Right}`} \r\n                            variant=\"outlined\" \r\n                            size=\"large\" \r\n                            disabled={seconds === 0 && minutes === 0 && hours === 0 ? true : false}>\r\n                                Start\r\n                        </Button>\r\n                }\r\n            </div>\r\n        </Zoom>\r\n    );\r\n}","import React from 'react';\r\n\r\n// Material UI Components\r\nimport { Dialog, DialogTitle, List, ListItem, ListItemText } from '@material-ui/core';\r\n\r\n// Style sheet\r\nimport Style from './Dialog.module.scss';\r\n\r\nexport function DialogComponent({dialog, handleCloseDialog, handleRepeat}){\r\n    return(\r\n        <Dialog\r\n            open={dialog}\r\n            keepMounted\r\n            onClose={handleCloseDialog}\r\n            aria-labelledby=\"alertDialogTitle\"\r\n        >\r\n            <DialogTitle id=\"alertDialogTitle\">Timer Complete!</DialogTitle>\r\n            <List className={Style.List}>\r\n                <ListItem button onClick={handleCloseDialog}>\r\n                    <ListItemText className={`${Style.ListBtn} ${Style.RedBtn}`} align=\"center\" primary={\"Stop\"} />\r\n                </ListItem>\r\n                <ListItem button onClick={handleRepeat}>\r\n                    <ListItemText className={`${Style.ListBtn} ${Style.GreyBtn}`} align=\"center\" primary={\"Repeat\"} />\r\n                </ListItem>\r\n            </List>\r\n        </Dialog>\r\n    );\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Material UI Components\r\nimport { Fade } from '@material-ui/core';\r\n\r\n// Components\r\nimport {TabsComponent} from '../Tabs/Tabs';\r\nimport {Time} from './components/Time/Time';\r\nimport {ButtonGroup} from './components/ButtonGroup/ButtonGroup';\r\nimport {DialogComponent} from './components/Dialog/Dialog';\r\n\r\n// Style sheet\r\nimport Style from './Timer.module.scss';\r\n\r\n// Sound\r\nimport Sound from '../../sound/beep.wav';\r\n\r\nexport class Timer extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            timerOn: false,\r\n            seconds: 0,\r\n            minutes: 0,\r\n            hours: 0,\r\n            dialog: false,\r\n            timer: null,\r\n        }\r\n    }\r\n\r\n    static propTypes = {\r\n        timerOn: PropTypes.bool,\r\n        seconds: PropTypes.number,\r\n        minutes: PropTypes.number,\r\n        hours: PropTypes.number,\r\n        dialog: PropTypes.bool,\r\n        timer: PropTypes.object,\r\n    }\r\n\r\n    // This method will reset the state and will clear the interval once the user exits from the page\r\n    componentWillUnmount(){\r\n        this.handleCancel();\r\n    }\r\n\r\n    // This method will run each time the state is changed and it will check whether the timer is 0\r\n    componentDidUpdate(){\r\n        if(this.state.seconds === 0 && this.state.minutes === 0 && this.state.hours === 0 && this.state.timerOn === true){\r\n            clearInterval(this.interval);\r\n            this.setState({\r\n                timerOn: false,\r\n            })\r\n            this.handleFinished();\r\n        } \r\n    }\r\n\r\n    // This method will update the timer depending on what button the users clicks on it will either decrease or increase the timer\r\n    handleTime = (type, clockType) => {\r\n        let hours = this.state.hours;\r\n        let minutes = this.state.minutes;\r\n        let seconds = this.state.seconds;\r\n\r\n        if(type === \"Add\"){\r\n            switch(clockType){\r\n                case \"Hour\":\r\n                    hours++;\r\n                    this.setState(state => ({\r\n                        hours: hours,\r\n                    }))\r\n                    break;\r\n                case \"Minute\":\r\n                    minutes++;\r\n                    this.setState(state => ({\r\n                        minutes: minutes,\r\n                    }))\r\n                    break;\r\n                case \"Second\":\r\n                    seconds++;\r\n                    this.setState(state => ({\r\n                        seconds: seconds,\r\n                    }))\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }else if(type === \"Subtract\"){\r\n            switch(clockType){\r\n                case \"Hour\":\r\n                    hours--;\r\n                    this.setState(state => ({\r\n                        hours: hours,\r\n                    }))\r\n                    break;\r\n                case \"Minute\":\r\n                    minutes--;\r\n                    this.setState(state => ({\r\n                        minutes: minutes,\r\n                    }))\r\n                    break;\r\n                case \"Second\":\r\n                    seconds--;\r\n                    this.setState(state => ({\r\n                        seconds: seconds,\r\n                    }))\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    // This method will reset the timer\r\n    handleCancel = () => {\r\n        clearInterval(this.interval);\r\n        this.setState({\r\n            timerOn: false,\r\n            seconds: 0,\r\n            minutes: 0,\r\n            hours: 0,\r\n            dialog: false,\r\n            timer: null,\r\n        })\r\n    }\r\n\r\n    // This method will pause the timer\r\n    handleStop = () => {\r\n        clearInterval(this.interval);\r\n        this.setState(state => ({\r\n            timerOn: !state.timerOn,\r\n        }))\r\n    }\r\n\r\n    // This method will start the timer\r\n    handleStart = () => {\r\n        let seconds = this.state.seconds;\r\n        let minutes = this.state.minutes;\r\n        let hours= this.state.hours;\r\n\r\n        const newTimer = {\r\n            seconds: seconds,\r\n            minutes: minutes,\r\n            hours: hours,\r\n        }\r\n\r\n        this.setState({\r\n            timer: newTimer,\r\n        })\r\n\r\n        this.interval = setInterval(() => {\r\n            if(hours === 0 && minutes === 0 && seconds === 0){\r\n                seconds = 0;\r\n                minutes = 0;\r\n                hours = 0;\r\n            } else if(minutes !== 0 && seconds === 0){\r\n                seconds = 60;\r\n                minutes--;\r\n            } else if(hours !== 0 && minutes === 0 && seconds === 0){\r\n                seconds = 60;\r\n                minutes = 59;\r\n                hours--;\r\n            }\r\n            seconds--;\r\n\r\n            this.setState({\r\n                seconds: seconds,\r\n                minutes: minutes,\r\n                hours: hours,\r\n            })\r\n        }, 1000);\r\n\r\n        this.setState(state => ({\r\n            timerOn: !state.timerOn,\r\n        }))\r\n    }\r\n\r\n    // This method will open a popup to let the user either restart the timer or stop\r\n    handleFinished = () => {\r\n        this.audio = new Audio(Sound);\r\n        this.audio.play();\r\n        this.audio.loop = true;\r\n        this.setState(state => ({\r\n            dialog: !state.dialog \r\n        }))\r\n    }\r\n\r\n    // This method will close the popup\r\n    handleCloseDialog = () => {\r\n        this.audio.pause();\r\n        this.handleCancel();\r\n    }\r\n\r\n    // This method will restart the timer\r\n    handleRepeat = () => {\r\n        this.audio.pause();\r\n        const currentTimer = this.state.timer;\r\n\r\n        let seconds = currentTimer.seconds;\r\n        let minutes = currentTimer.minutes;\r\n        let hours= currentTimer.hours;\r\n\r\n        this.setState(state => ({\r\n            dialog: !state.dialog,\r\n            seconds: seconds,\r\n            minutes: minutes,\r\n            hours: hours,\r\n        }))\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <TabsComponent location={3} />\r\n                    <Fade timeout={500} in>\r\n                        <div className={Style.Container}>\r\n                            <Time \r\n                                timerOn={this.state.timerOn} \r\n                                seconds={this.state.seconds} \r\n                                minutes={this.state.minutes} \r\n                                hours={this.state.hours} \r\n                                handleTime={this.handleTime} />\r\n                            <ButtonGroup \r\n                                timerOn={this.state.timerOn} \r\n                                seconds={this.state.seconds} \r\n                                minutes={this.state.minutes} \r\n                                hours={this.state.hours} \r\n                                handleCancel={this.handleCancel} \r\n                                handleStop={this.handleStop} \r\n                                handleStart={this.handleStart} />\r\n                            <DialogComponent \r\n                                dialog={this.state.dialog} \r\n                                handleCloseDialog={this.handleCloseDialog} \r\n                                handleRepeat={this.handleRepeat} />\r\n                        </div>\r\n                    </Fade>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport {HashRouter as Router, Route} from \"react-router-dom\";\n\n// Components\nimport {Clock} from '../components/Clock/Clock';\nimport {Alarm} from '../components/Alarm/Alarm';\nimport {Stopwatch} from '../components/Stopwatch/Stopwatch';\nimport {Timer} from '../components/Timer/Timer';\n\n// Material UI Components\nimport { ThemeProvider, Container } from '@material-ui/core';\n\n// Style sheet\nimport Style from './App.module.scss';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#1565C0',\n    },\n  },\n});\n\nexport default function App(){\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <ThemeProvider theme={theme}>\n        <Router>\n          <Container className={Style.Container} maxWidth=\"md\">\n              <Route path=\"/timer\">\n                <Timer />\n              </Route>\n              <Route path=\"/stopwatch\">\n                <Stopwatch />\n              </Route>\n              <Route path=\"/alarm\">\n                <Alarm />\n              </Route>\n              <Route exact path=\"/\">\n                <Clock />\n              </Route>\n          </Container>\n        </Router>\n      </ThemeProvider>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Components\nimport App from './container/App';\n\n// Style sheet\nimport './index.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Time\":\"Add_Time__2C8nD\",\"TimeGroup\":\"Add_TimeGroup__3yF0o\",\"Tooltip\":\"Add_Tooltip__2bulp\",\"Hidden\":\"Add_Hidden__2zTFK\",\"GreyBtn\":\"Add_GreyBtn__1LYU1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Stopwatch_Container__2RiYZ\",\"Time\":\"Stopwatch_Time__2bssB\",\"ButtonGroup\":\"Stopwatch_ButtonGroup__iNOI3\",\"GreyBtn\":\"Stopwatch_GreyBtn__1LdxN\",\"RedBtn\":\"Stopwatch_RedBtn__Naygb\",\"GreenBtn\":\"Stopwatch_GreenBtn__1_qdm\",\"List\":\"Stopwatch_List__3VHPd\",\"Fastest\":\"Stopwatch_Fastest__tJ_t0\",\"Slowest\":\"Stopwatch_Slowest__23BLV\",\"Normal\":\"Stopwatch_Normal__YubiQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ButtonGroup\":\"ButtonGroup_ButtonGroup__1UuWO\",\"Right\":\"ButtonGroup_Right__2RsMB\",\"Left\":\"ButtonGroup_Left__2KkSW\",\"GreyBtn\":\"ButtonGroup_GreyBtn__Rhoz0\",\"RedBtn\":\"ButtonGroup_RedBtn__3EG6X\",\"GreenBtn\":\"ButtonGroup_GreenBtn__hvW-6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"List_List__-K-mC\",\"Active\":\"List_Active__g6I_i\",\"Inactive\":\"List_Inactive__A-SXp\",\"Center\":\"List_Center__3QQFb\",\"GreyBtn\":\"List_GreyBtn__3l5UH\",\"RedBtn\":\"List_RedBtn__23jjK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GreyBtn\":\"Dialog_GreyBtn__fDAOq\",\"RedBtn\":\"Dialog_RedBtn__26bOX\",\"ListBtn\":\"Dialog_ListBtn__2ngcC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Content_Content__th24N\",\"Title\":\"Content_Title__2O-zx\",\"Subtitle\":\"Content_Subtitle__2I8Qq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Paper\":\"Paper_Paper__2pVgK\",\"BlackBtn\":\"Paper_BlackBtn__3gMhs\",\"RedBtn\":\"Paper_RedBtn__2muQn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Paper\":\"Paper_Paper__1sLq9\",\"BlackBtn\":\"Paper_BlackBtn__3YN1X\",\"PrimaryBtn\":\"Paper_PrimaryBtn__1ykNR\"};","module.exports = __webpack_public_path__ + \"static/media/beep.5a020f67.wav\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RedBtn\":\"Alarm_RedBtn__1N51d\",\"ListBtn\":\"Alarm_ListBtn__2g3yC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GreyBtn\":\"List_GreyBtn__3dvqU\",\"RedBtn\":\"List_RedBtn__2JUF2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GreyBtn\":\"Delete_GreyBtn__1f2R1\",\"RedBtn\":\"Delete_RedBtn__36zC-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GreyBtn\":\"Delete_GreyBtn__26I1Q\",\"RedBtn\":\"Delete_RedBtn__3Ts9G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GreyBtn\":\"Add_GreyBtn__AUTUZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Clock_Container__1nEaK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Alarm_Container__lG4nV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Timer_Container__2BZcZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"App_Container__2MIaf\"};"],"sourceRoot":""}